import{_ as s,o as e,c as t,O as r}from"./chunks/framework.46ddca34.js";const m=JSON.parse('{"title":"","description":"Express.js 的中间件是一种函数，它可以在请求和响应之间进行处理","frontmatter":{"description":"Express.js 的中间件是一种函数，它可以在请求和响应之间进行处理","tags":["服务端","express"]},"headers":[],"relativePath":"B.NodeJS学习/12.express服务端框架/3.express中间件.md","filePath":"B.NodeJS学习/12.express服务端框架/3.express中间件.md","lastUpdated":1684125715000}'),o={name:"B.NodeJS学习/12.express服务端框架/3.express中间件.md"},p=r('<p>Express 中间件是<strong>一种函数</strong>，它可以在<strong>请求和响应之间进行处理</strong>。它可以访问请求对象（req）、响应对象（res）和应用程序的下一个中间件函数（next）。中间件可以用来执行各种任务，例如验证请求、处理错误、记录请求等。做为回调函数接受三个参数</p><ul><li>请求对象（request对象）</li><li>响应对象（response对象）</li><li>next函数（在express中定义的用于执行下一个中间件的函数）</li></ul><div class="tip custom-block"><p class="custom-block-title">路由不算中间件</p><p>路由和中间件是两个不同的概念，但在 Express 中，路由处理函数实际上也是一种特殊的中间件。路由处理函数与普通中间件的主要区别在于，路由处理函数只在特定的 URL 和 HTTP 方法匹配时才会被调用，而普通中间件则会在请求-响应周期中的特定阶段被调用。</p><p>路由不算中间件，但<strong>路由处理函数可以被视为一种特殊的中间件</strong></p></div><h2 id="中间件使用" tabindex="-1">中间件使用 <a class="header-anchor" href="#中间件使用" aria-label="Permalink to &quot;中间件使用&quot;">​</a></h2><p>Express 中间件可以是<strong>全局中间件</strong>或<strong>路由中间件</strong>。全局中间件会在每个请求上执行，而路由中间件只会在特定路由上执行。</p>',5),a=[p];function n(_,i,c,l,d,x){return e(),t("div",null,a)}const u=s(o,[["render",n]]);export{m as __pageData,u as default};
