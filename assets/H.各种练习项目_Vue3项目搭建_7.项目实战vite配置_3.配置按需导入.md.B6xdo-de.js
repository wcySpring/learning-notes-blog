import{_ as s,c as n,o as a,a8 as l}from"./chunks/framework.6k5lawSO.js";const m=JSON.parse('{"title":"","description":"Vite的配置项目的按需导入","frontmatter":{"description":"Vite的配置项目的按需导入"},"headers":[],"relativePath":"H.各种练习项目/Vue3项目搭建/7.项目实战vite配置/3.配置按需导入.md","filePath":"H.各种练习项目/Vue3项目搭建/7.项目实战vite配置/3.配置按需导入.md","lastUpdated":1695881925000}'),p={name:"H.各种练习项目/Vue3项目搭建/7.项目实战vite配置/3.配置按需导入.md"},e=l(`<p>在 <code>项目中组件库引入</code> 章节介绍了组件需要按需导入，因此我们要配置按需导入的 vite 插件,将vite插件都集成在 <code>/build/plugins/</code> 目录里</p><table tabindex="0"><thead><tr><th>插件</th><th>概念</th><th>自动导入对象</th></tr></thead><tbody><tr><td>unplugin-auto-import</td><td>按需自动导入API</td><td>ref，reactive，watch，computed等API</td></tr><tr><td>unplugin-vue-components</td><td>按需自动导入组件</td><td>Element Plus等第三方库和指定目录下的自定义组件</td></tr></tbody></table><h2 id="autoimport-ts" tabindex="-1">autoImport.ts <a class="header-anchor" href="#autoimport-ts" aria-label="Permalink to &quot;autoImport.ts&quot;">​</a></h2><p>创建文件 <code>/build/plugins/autoImportDeps.ts</code> 用来管理 <code>unplugin-auto-import</code> 插件</p><p><code>unplugin-auto-import</code> <strong>该插件主要用于自动导入 JavaScript 语法和库</strong>。它可以自动导入 Vue Composition API、JavaScript 语法、甚至是你自己定义的函数或对象。减少了手动引入的步骤</p><p><strong>注意如果你使用 ts 你需要配置声明 ts 导入的配置文件 <code>dts</code> 属性</strong>，需要将声明文件配置到 tsconfig 中的 <code>include</code> 字段一般配置是将生成文件放到 types 文件下</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A0A1A7;font-style:italic;">// tsconfig.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50A14F;">&quot;include&quot;</span><span style="color:#383A42;">: [  </span><span style="color:#50A14F;">&quot;types/**/*.d.ts&quot;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&quot;types/**/*.ts&quot;</span><span style="color:#383A42;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>如果你开启 <code>eslint</code>,因为自动导入的缘故，没有在业务中声明（之前你是先声明 ts 找到导入的声明文件来识别这些类型），因此在使用这些自动导入的api 时候会出现eslint 的报错</strong>，此时需要 对 <code>eslintrc</code> 配置生成 <code>.eslintrc-auto-import.json</code>,并且需要你将声明的文件配置到 eslint 配置文件的 extends 中进行声明</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#50A14F;">&quot;extends&quot;</span><span style="color:#383A42;">: [</span></span>
<span class="line"><span style="color:#50A14F;">    &quot;./.eslintrc-auto-import.json&quot;</span></span>
<span class="line"><span style="color:#383A42;">],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这里使用的是 <code>element-plus</code> 因此需要导入 <code>element-plus</code> 一些反馈组件（自动导入 Element Plus 相关函数，如：ElMessage, ElMessageBox... (带样式)），和常用的 <code>vue</code> 、<code>pinia</code> 、<code>@vueuse/core</code> 包的自动导入配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span><span style="color:#383A42;font-style:italic;">@</span><span style="color:#A626A4;font-style:italic;">name</span><span style="color:#C18401;font-style:italic;"> autoImportDepsPlugin</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span><span style="color:#383A42;font-style:italic;">@</span><span style="color:#A626A4;font-style:italic;">description</span><span style="color:#A0A1A7;font-style:italic;"> 按需加载，自动引入</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#E45649;"> AutoImport</span><span style="color:#A626A4;"> from</span><span style="color:#50A14F;"> &#39;unplugin-auto-import/vite&#39;</span></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#383A42;"> { </span><span style="color:#E45649;">ElementPlusResolver</span><span style="color:#383A42;"> } </span><span style="color:#A626A4;">from</span><span style="color:#50A14F;"> &#39;unplugin-vue-components/resolvers&#39;</span></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#E45649;"> path</span><span style="color:#A626A4;"> from</span><span style="color:#50A14F;"> &#39;path&#39;</span></span>
<span class="line"><span style="color:#A626A4;">export</span><span style="color:#A626A4;"> const</span><span style="color:#4078F2;"> autoImportDepsPlugin</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> () </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">  return</span><span style="color:#4078F2;"> AutoImport</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 生成对应的 .d.ts 文件，用于 TypeScript 支持</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 指定自动导入函数TS类型声明文件路径</span></span>
<span class="line"><span style="color:#E45649;">    dts</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> path.</span><span style="color:#4078F2;">resolve</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;types&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;auto-imports.d.ts&#39;</span><span style="color:#383A42;">),</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 定义全局导入的模块和别名</span></span>
<span class="line"><span style="color:#E45649;">    imports</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span></span>
<span class="line"><span style="color:#50A14F;">      &#39;vue&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#50A14F;">      &#39;pinia&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#50A14F;">      &#39;vue-router&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">      {</span></span>
<span class="line"><span style="color:#50A14F;">        &#39;@vueuse/core&#39;</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> []</span></span>
<span class="line"><span style="color:#383A42;">      }</span></span>
<span class="line"><span style="color:#383A42;">    ],</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 生成对应的 .eslintrc-auto-import.json 文件，用于 ESLint 配置</span></span>
<span class="line"><span style="color:#E45649;">    eslintrc</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#E45649;">      enabled</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">      filepath</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> path.</span><span style="color:#4078F2;">resolve</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;.eslintrc-auto-import.json&#39;</span><span style="color:#383A42;">), </span><span style="color:#A0A1A7;font-style:italic;">// 指定自动导入函数 eslint 规则的文件</span></span>
<span class="line"><span style="color:#E45649;">      globalsPropValue</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;readonly&#39;</span><span style="color:#A0A1A7;font-style:italic;"> // 设置全局变量为只读</span></span>
<span class="line"><span style="color:#383A42;">    },</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // Auto import functions from Element Plus, e.g. ElMessage, ElMessageBox... (with style)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 自动导入 Element Plus 相关函数，如：ElMessage, ElMessageBox... (带样式)</span></span>
<span class="line"><span style="color:#E45649;">    resolvers</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span><span style="color:#4078F2;">ElementPlusResolver</span><span style="color:#383A42;">()]</span></span>
<span class="line"><span style="color:#383A42;">  })</span></span>
<span class="line"><span style="color:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="autoregistrycmpplugin" tabindex="-1">autoRegistryCmpPlugin <a class="header-anchor" href="#autoregistrycmpplugin" aria-label="Permalink to &quot;autoRegistryCmpPlugin&quot;">​</a></h2><p><code>unplugin-vue-components</code> 专为 Vue 组件设计，可以自动导入 支持 Vue2 和 Vue3 组件和指令。</p><p>可以不需要手动引入组件，能够让开发者就像全局组件那样进行开发，但实际上又是按需引入，且不限制打包工具</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A0A1A7;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span><span style="color:#383A42;font-style:italic;">@</span><span style="color:#A626A4;font-style:italic;">name</span><span style="color:#C18401;font-style:italic;">  autoRegistryCmpPlugin</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span><span style="color:#383A42;font-style:italic;">@</span><span style="color:#A626A4;font-style:italic;">description</span><span style="color:#A0A1A7;font-style:italic;"> 按需加载，自动引入组件</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#E45649;"> Components</span><span style="color:#A626A4;"> from</span><span style="color:#50A14F;"> &#39;unplugin-vue-components/vite&#39;</span></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#383A42;"> { </span><span style="color:#E45649;">ElementPlusResolver</span><span style="color:#383A42;"> } </span><span style="color:#A626A4;">from</span><span style="color:#50A14F;"> &#39;unplugin-vue-components/resolvers&#39;</span></span>
<span class="line"><span style="color:#A626A4;">import</span><span style="color:#E45649;"> path</span><span style="color:#A626A4;"> from</span><span style="color:#50A14F;"> &#39;path&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">export</span><span style="color:#A626A4;"> const</span><span style="color:#4078F2;"> autoRegistryCmpPlugin</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> () </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">  return</span><span style="color:#4078F2;"> Components</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // Auto register Element Plus components</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 自动导入 Element Plus 组件</span></span>
<span class="line"><span style="color:#E45649;">    resolvers</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span><span style="color:#4078F2;">ElementPlusResolver</span><span style="color:#383A42;">()],</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 指定生成的 组件的 ts 文件目录</span></span>
<span class="line"><span style="color:#E45649;">    dts</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> path.</span><span style="color:#4078F2;">resolve</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;types&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;components.d.ts&#39;</span><span style="color:#383A42;">),</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E45649;">    directives</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span></span>
<span class="line"><span style="color:#383A42;">  })</span></span>
<span class="line"><span style="color:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,15),o=[e];function t(r,c,i,y,u,A){return a(),n("div",null,o)}const d=s(p,[["render",t]]);export{m as __pageData,d as default};
