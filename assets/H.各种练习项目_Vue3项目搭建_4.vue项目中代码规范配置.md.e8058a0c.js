import{_ as e,o as s,c as n,V as a}from"./chunks/framework.96db2af4.js";const y=JSON.parse('{"title":"","description":"vue 项目的代码规范","frontmatter":{"description":"vue 项目的代码规范"},"headers":[],"relativePath":"H.各种练习项目/Vue3项目搭建/4.vue项目中代码规范配置.md","filePath":"H.各种练习项目/Vue3项目搭建/4.vue项目中代码规范配置.md","lastUpdated":1692146840000}'),t={name:"H.各种练习项目/Vue3项目搭建/4.vue项目中代码规范配置.md"},r=a(`<p>在团队开发过程中需要良好的代码规范帮助我们提高团队代码协作，常见的方式就是 使用 eslint 配合 prettier 来进行代码规范的约束。具体使用可以参考 <a href="https://eslint.org/" target="_blank" rel="noreferrer">eslint</a> 和 <a href="https://prettier.io/" target="_blank" rel="noreferrer">prettier</a> 官网。 或者是章节中的前端工程胡=》搭建代码规范 章节中讲解</p><h2 id="关于-vue-配置-eslint-和-prettier" tabindex="-1">关于 vue 配置 eslint 和 prettier <a class="header-anchor" href="#关于-vue-配置-eslint-和-prettier" aria-label="Permalink to &quot;关于 vue 配置 eslint 和 prettier&quot;">​</a></h2><p>在通过vite安装完成项目后，选择了 eslint 和 prettier 作为代码规范检测工具后生成两个文件 <code>.eslintrc.cjs</code> 和 <code>.prettierrc.json</code></p><h3 id="eslintrc-cjs-文件" tabindex="-1">.eslintrc.cjs 文件 <a class="header-anchor" href="#eslintrc-cjs-文件" aria-label="Permalink to &quot;.eslintrc.cjs 文件&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;@rushstack/eslint-patch/modern-module-resolution&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;extends&#39;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;plugin:vue/vue3-essential&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;eslint:recommended&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;@vue/eslint-config-typescript&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;@vue/eslint-config-prettier/skip-formatting&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">parserOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">ecmaVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;latest&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>这段代码 require(&#39;@rushstack/eslint-patch/modern-module-resolution&#39;) 的作用是在 ESLint 中启用现代模块解析。具体来说，它会使用 Rush Stack 提供的模块解析器来解析模块路径，以确保在使用 ESLint 进行代码检查时，模块路径的解析方式与实际运行时的解析方式一致。</p><p>举个例子，假设你的项目中使用了一些依赖，这些依赖是通过 npm 安装的。在使用 ESLint 进行代码检查时，如果不启用现代模块解析，ESLint 可能会无法正确地解析这些依赖的路径，从而导致代码检查失败。启用现代模块解析可以解决这个问题，确保 ESLint 能够正确地解析依赖的路径。 具体<a href="https://github.com/eslint/eslint/issues/3458" target="_blank" rel="noreferrer">参考</a></p><ul><li><p><a href="https://eslint.vuejs.org/user-guide/#installation" target="_blank" rel="noreferrer">plugin:vue/vue3-essential</a> ，默认的 JavaScript 解析器必须被替换，因为 Vue.js 单个文件组件不是普通的 JavaScript，而是自定义的文件格式。Vue-eslint-parser 是一个替代解析器，它使用表示模板语法特定部分的节点以及 标记的内容生成增强的 AST ，使用他首先安装 <code>yarn add -D eslint eslint-plugin-vue</code> 其中 plugin:vue/vue3-essential 规则主要针对 加上防止错误或意外行为的规则，但不会强制执行个人偏好的规则。如果你想要一个更严格的规则集，可以使用 plugin:vue/vue3-strongly-recommended 或 plugin:vue/vue3-recommended。查看他的<a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noreferrer">规则</a></p></li><li><p><a href="https://eslint.org/docs/rules/" target="_blank" rel="noreferrer">eslint:recommended</a> 该规则集包含一些在 ESLint 官方文档中被认为是最佳实践的规则，这些规则可以帮助你避免一些常见的错误。</p></li><li><p><a href="https://www.npmjs.com/package/@vue/eslint-config-typescript" target="_blank" rel="noreferrer">@vue/eslint-config-typescript</a>：专门给 Vue 使用的 TS 验证规则它还关闭了 eslint 中的几个冲突规则: 推荐规则集，这个配置是专门为 <strong>@vue/cli &amp; create-vue</strong> 设置而设计的，不适合外部使用(它可以使用，但可能需要在用户端进行一些修改——详细信息请参阅配置文件)。需要配合 <strong>@rushstack/eslint-patch</strong> 安装 <code>npm add --dev @vue/eslint-config-typescript @rushstack/eslint-patch</code> ，<code>@vue/eslint-config-typescript</code> 有两套规则集，一个是 <code>@vue/eslint-config-typescript</code> ，一个就是 <code>@vue/eslint-config-typescript/recommended</code> 。其中，后者更加严格参考<a href="https://typescript-eslint.io/rules/" target="_blank" rel="noreferrer">规则</a></p></li><li><p><a href="https://www.npmjs.com/package/@vue/eslint-config-prettier" target="_blank" rel="noreferrer">@vue/eslint-config-prettier/skip-formatting</a>:专门给 Vue 使用的 Prettier 验证规则（eslint-config-prettier）。作用：关闭所有不需要的、或者可能与 Prettier 产生冲突的 eslint 规则。</p></li><li><p>parserOptions：解析器选项，允许你指定 JS 语言（包括 JSX 语法），默认为 ES5。这里设置为 latest，表示支持最新的 ES 语法。</p></li></ul><p><strong>注意他们的顺序 Prettier 它应该被放在 extends 数组的最后而覆盖其他配置，这样就能完全关闭 ESLint 规则集中与格式化代码相关的规则，并且如果在 eslint 中集成了 Prettier，那么在使用 eslint fix 时候也会一并修复 prettier 的规则。</strong></p>`,9),l=[r];function p(o,i,c,u,B,d){return s(),n("div",null,l)}const b=e(t,[["render",p]]);export{y as __pageData,b as default};
