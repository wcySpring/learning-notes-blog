import{_ as s,o as n,c as a,V as e}from"./chunks/framework.96db2af4.js";const l="/learning-notes-blog/images/2023-08-17-08-33-09.png",p="/learning-notes-blog/images/2023-08-14-07-55-00.png",t="/learning-notes-blog/images/2023-08-14-07-55-26.png",i="/learning-notes-blog/images/2023-08-14-07-56-08.png",r="/learning-notes-blog/images/2023-08-14-08-01-27.png",h=JSON.parse('{"title":"","description":"EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。","frontmatter":{"description":"EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。"},"headers":[],"relativePath":"C.前端工程化/4.搭建代码规范/1.EditorConfig专注于统一编辑器编码风格配置.md","filePath":"C.前端工程化/4.搭建代码规范/1.EditorConfig专注于统一编辑器编码风格配置.md","lastUpdated":1692232657000}'),o={name:"C.前端工程化/4.搭建代码规范/1.EditorConfig专注于统一编辑器编码风格配置.md"},c=e('<p>代码编辑器的配置信息独立维护不对外共享。使用不同编辑器打开同一份文件，如果编辑器配置不统一，显示效果和输入内容很有可能不一致，单个编辑器独立操作只是存在隐患，在多编辑器或跨编辑器的情况下，隐患就容易升级为问题，最终导致代码处于混杂状态</p><p><strong>因此 EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格</strong>。如「设定缩进使用 Tab 还是 Space」，「一个 Tab 占用多少列」，「是否在文件末尾显示空行」等等</p><p>比如，一个 Tab 占用两列的 Sublime，一个 Tab 占用四列的 VSCode ，打开同一份文件显示效果不同 <img src="'+l+'" alt=""></p><p>单个编辑器独立操作只是存在隐患，在多编辑器或跨编辑器的情况下，隐患就容易升级为问题，最终导致代码处于混杂状态。</p><h2 id="支持的市面编辑器" tabindex="-1">支持的市面编辑器 <a class="header-anchor" href="#支持的市面编辑器" aria-label="Permalink to &quot;支持的市面编辑器&quot;">​</a></h2><p>EditorConfig 配置基本覆盖了主流上大部分浏览器，这些浏览器分为两种 内置自带解析EditorConfig 和需要安装插件提过EditorConfig 解析的两大类</p><ul><li><p>不需要安装插件的 <img src="'+p+'" alt=""></p></li><li><p>需要安装插件的 <img src="'+t+'" alt=""></p></li></ul><p>以 vscode 为例 需要安装下图的插件才能使用 <img src="'+i+`" alt=""></p><h2 id="简单配置说明" tabindex="-1">简单配置说明 <a class="header-anchor" href="#简单配置说明" aria-label="Permalink to &quot;简单配置说明&quot;">​</a></h2><p>配置 .editorconfig 文件</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># http://editorconfig.org</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">root = true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">[*] </span><span style="color:#7F848E;font-style:italic;"># 表示所有文件适用</span></span>
<span class="line"><span style="color:#98C379;">charset = utf-8</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 设置文件字符集为 utf-8，不同编译器可能存在默认不是utf-8解码</span></span>
<span class="line"><span style="color:#98C379;">indent_style = space</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 缩进风格（tab | space）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># tab_width = 2       设置 tab 所占列数。默认是indent_size</span></span>
<span class="line"><span style="color:#98C379;">indent_size = 2</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 缩进大小</span></span>
<span class="line"><span style="color:#98C379;">end_of_line = lf</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 控制换行类型(lf | cr | crlf)</span></span>
<span class="line"><span style="color:#98C379;">trim_trailing_whitespace = true</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 去除行尾的任意空白字符</span></span>
<span class="line"><span style="color:#98C379;">insert_final_newline = true</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 始终在文件末尾插入一个新行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;">*</span><span style="color:#E06C75;">.md</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;"># 表示仅 md 文件适用以下规则</span></span>
<span class="line"><span style="color:#98C379;">max_line_length = off</span></span>
<span class="line"><span style="color:#98C379;">trim_trailing_whitespace = false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="prettier-还需要-editorconfig" tabindex="-1">Prettier 还需要 EditorConfig <a class="header-anchor" href="#prettier-还需要-editorconfig" aria-label="Permalink to &quot;Prettier 还需要 EditorConfig&quot;">​</a></h2><p><strong>EditorConfig 解决了编辑器配置层面的编码风格一致性问题。作用于预览和输入阶段</strong>，Prettier 在保存和提交阶段重新组织代码，Prettier 会成为代码形态的最终决定者</p><p>EditorConfig 覆盖所有类型的文件，可以采用 EditorConfig 管理相交属性，其他属性则由 Prettier 控制。</p><p>EditorConfig 使不同编辑器可以保持同样的配置。因此，我们得以无需在每次编写新代码时，再依靠 Prettier 来按照团队约定格式化一遍（译注：出现保存时格式化突然改变的情况）。当然这需要在你的 IDE 上安装了必要的 EditorConfig 插件或扩展。</p><p>并且关于代码风格的部分并未涉及，比如是否「需要在语句末尾添加分号」，「字符串使用单引号还是双引号包裹」，「多行对象的书写规范」等等。这些都是 Prettier 的工作范畴，而不是 EditorConfig 的。</p><p>以 VSCode 为例，但 EditorConfig 支持很多编辑器。</p><p>在项目中增加自定义的编辑器配置：</p><p>.editorconfig</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">[*]</span></span>
<span class="line"><span style="color:#98C379;">end_of_line = lf</span></span>
<span class="line"><span style="color:#98C379;">charset = utf-8</span></span>
<span class="line"><span style="color:#98C379;">indent_style = space</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果安装了 the EditorConfig VSCode extension，编辑器将自动获知该如何格式化你的文件。你也能在编辑器右下角看到相应的信息</p><p><img src="`+r+`" alt=""></p><p>这意味着 Prettier 和 EditorConfig 共享了相同的配置选项，所以要注意是两者配置最好统一</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># EditorConfig</span></span>
<span class="line"><span style="color:#98C379;">end_of_line</span></span>
<span class="line"><span style="color:#98C379;">indent_style</span></span>
<span class="line"><span style="color:#98C379;">indent_size/tab_width</span></span>
<span class="line"><span style="color:#98C379;">max_line_length</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Prettier</span></span>
<span class="line"><span style="color:#98C379;">&quot;endOfLine&quot;</span></span>
<span class="line"><span style="color:#98C379;">&quot;useTabs&quot;</span></span>
<span class="line"><span style="color:#98C379;">&quot;tabWidth&quot;</span></span>
<span class="line"><span style="color:#98C379;">&quot;printWidth&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>其实如果 配置了 Prettier 最后代码一定是按照 Prettier 为准，EditorConfig 所能提供的就是编写阶段不用在手敲代码时候 去注意使用的配置细节，但是如果你配置 Prettier ，它是在保存阶段 正是如此本质上他会覆盖 EditorConfig，你可以理解编写时候处理让你更好的书写代码的作用</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://juejin.cn/post/6971783776221265927?searchId=202308140732546EF0061C34475BBE5370#heading-0" target="_blank" rel="noreferrer">译 以和为贵！让 ESlint、Prettier 和 EditorConfig 互不冲突</a></p>`,28),d=[c];function b(u,m,g,_,y,f){return n(),a("div",null,d)}const E=s(o,[["render",b]]);export{h as __pageData,E as default};
