import{_ as s,c as n,o as a,a8 as p}from"./chunks/framework.6k5lawSO.js";const m=JSON.parse('{"title":"","description":"了解Express.js框架的基本概念,搭建一个Router应用程序","frontmatter":{"description":"了解Express.js框架的基本概念,搭建一个Router应用程序","tags":["服务端","express"]},"headers":[],"relativePath":"B.NodeJS学习/13.express服务端框架/5.express路由模块化.md","filePath":"B.NodeJS学习/13.express服务端框架/5.express路由模块化.md","lastUpdated":1686039772000}'),l={name:"B.NodeJS学习/13.express服务端框架/5.express路由模块化.md"},e=p(`<p>express.Router是一个构造函数，用于创建可挂载的路由处理程序。它可以将路由处理程序分组，并将它们挂载到不同的路径上，从而使代码更加模块化和易于维护。使用express.Router可以轻松地创建多个路由处理程序，并将它们组织成一个完整的应用程序。因此express 中的 Router 是一个完整的中间件和路由系统，可以看做是一个小型的 app 对象</p><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>模块化开发：express.Router()允许你将路由逻辑组织到单独的文件或模块中，使得项目的复杂度更低，可读性更高，同时便于维护和重构。</p><h2 id="配合app-use-统一前缀" tabindex="-1">配合app.use 统一前缀 <a class="header-anchor" href="#配合app-use-统一前缀" aria-label="Permalink to &quot;配合app.use 统一前缀&quot;">​</a></h2><p>使用 app.use 统一访问前缀，进行分组管理</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> app</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> homeApp</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 访问使用时候需要 /my/home</span></span>
<span class="line"><span style="color:#383A42;">homeApp.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/home&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;home index&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 增加前缀</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/my&#39;</span><span style="color:#383A42;">, homeApp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 启动服务</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">listen</span><span style="color:#383A42;">(</span><span style="color:#986801;">3000</span><span style="color:#383A42;">, () </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;server is running at port 3000&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>|-- app.js</span></span>
<span class="line"><span>|-- ip.txt</span></span>
<span class="line"><span>|-- package-lock.json</span></span>
<span class="line"><span>|-- package.json</span></span>
<span class="line"><span>\`-- routes</span></span>
<span class="line"><span>    \`-- adminRouter.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>下面案例将路由进行分化然，将分化的路由注册会到全局中间件，express.Router 下创建的中间也叫路由中间件</p><ul><li>adminRouter.js</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 创建路由</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> adminRouter</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> express.</span><span style="color:#4078F2;">Router</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 路由中间件</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// adminRouter.use()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">adminRouter.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/home&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;admin index&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E45649;">module</span><span style="color:#383A42;">.</span><span style="color:#E45649;">exports</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> adminRouter</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>app.js</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 引入路由</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> adminRouter</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;./routes/adminRouter&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> app</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(adminRouter)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 启动服务</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">listen</span><span style="color:#383A42;">(</span><span style="color:#986801;">3000</span><span style="color:#383A42;">, () </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;server is running at port 3000&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,13),o=[e];function r(c,t,i,y,b,u){return a(),n("div",null,o)}const d=s(l,[["render",r]]);export{m as __pageData,d as default};
