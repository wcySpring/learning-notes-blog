import{_ as s,o as n,c as a,V as l}from"./chunks/framework.96db2af4.js";const p="/learning-notes-blog/images/2023-08-12-21-08-24.png",o="/learning-notes-blog/images/2023-08-12-21-08-32.png",e="/learning-notes-blog/images/2023-08-12-21-08-39.png",t="/learning-notes-blog/images/2023-08-12-21-08-47.png",c="/learning-notes-blog/images/2023-08-13-10-07-13.png",r="/learning-notes-blog/images/2023-08-13-09-33-31.png",B="/learning-notes-blog/images/2023-08-13-09-34-06.png",i="/learning-notes-blog/images/2023-08-13-16-16-17.png",y="/learning-notes-blog/images/2023-08-13-16-36-27.png",v=JSON.parse('{"title":"","description":"搭建vue 项目的工具介绍","frontmatter":{"description":"搭建vue 项目的工具介绍"},"headers":[],"relativePath":"H.各种练习项目/Vue3项目搭建/2.项目搭建工具.md","filePath":"H.各种练习项目/Vue3项目搭建/2.项目搭建工具.md","lastUpdated":1695115873000}'),u={name:"H.各种练习项目/Vue3项目搭建/2.项目搭建工具.md"},F=l('<p>一般我们会通过webpack构建项目但是，能每一个项目从头来完成所有的webpack配置，这样显示开发的效率会大大的降低，常会使用<strong>脚手架</strong>来创建一个项目，帮助我们搭建项目的工具（<strong>会构建 项目基本目录解构，基本配置，基本使用的包等</strong>），随着前端的发展现在打包工具除了webpack 有了更多的其他选择</p><p>搭建 VUE 项目这类脚手架选择的工具有两种 VITE 或者 vue/cli 两种方案</p><h2 id="使用-vue-cli" tabindex="-1">使用 vue/cli <a class="header-anchor" href="#使用-vue-cli" aria-label="Permalink to &quot;使用 vue/cli&quot;">​</a></h2><p>Vue CLI，<code>CLI</code>是<code>Command-Line Interface</code>, 翻译为<strong>命令行界面</strong>，通过<code>CLI</code>选择项目的<strong>配置和创建出我们的项目</strong>，<code>Vue CLI</code>已经内置了<strong>webpack相关的配置，我们不需要从零来配置</strong></p><ul><li>安装</li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">npm install @vue/cli -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>临时安装</li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">npx @vue/cli ui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>使用</li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">Vue create 项目的名称</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">Vue ui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>创建过程的一些选择如图</li></ul><p><img src="'+p+'" alt=""></p><p><img src="'+o+'" alt=""></p><p><img src="'+e+'" alt=""></p><p><img src="'+t+`" alt=""></p><h3 id="项目目录" tabindex="-1">项目目录 <a class="header-anchor" href="#项目目录" aria-label="Permalink to &quot;项目目录&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">README.md</span><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;"># 项目的文档。它可以包含有关项目的信息，包括目的、安装说明、使用指南和其他相关细节。</span></span>
<span class="line"><span style="color:#ABB2BF;">| </span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.browserslistrc</span><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;"># 用于定义目标浏览器及其版本，以确保项目与特定浏览器版本兼容。在Web开发中，通常使用它配置Autoprefixer和Babel等工具，以确保生成的代码与特定的浏览器版本兼容。</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">babel.config.js</span><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># Babel是一个JavaScript编译器。Babel允许你编写现代的JavaScript代码，并将其转译为向后兼容的版本，以在旧版浏览器或环境中运行 </span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">jsconfig.json</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 用于JavaScript项目，它使用Visual Studio Code（VS Code）编辑器。它提供了编辑器的配置设置</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">package-lock.json</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 当在项目中安装或更新包时会自动生成这个文件。它确保安装的包在不同环境中保持一致，通过锁定它们的版本</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">package.json</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">#  它包含了关于项目的元数据，比如名称、版本、依赖项、脚本和其他配置设置</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">public</span><span style="color:#ABB2BF;">     </span><span style="color:#7F848E;font-style:italic;"># 这个目录包含作为项目中静态文件提供的公共资源。在这种情况下，它包括favicon.ico文件（在浏览器选项卡中显示的图标）和index.html文件，它作为Web应用程序的入口点</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">favicon.ico</span></span>
<span class="line"><span style="color:#ABB2BF;">|   </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> index.html</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> src        </span><span style="color:#7F848E;font-style:italic;"># 这个目录包含项目的源代码</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> App.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> assets</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">logo.png</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">components</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> HelloWorld.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">main.js</span></span>
<span class="line"><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> vue.config.js </span><span style="color:#7F848E;font-style:italic;"># 这个文件是用于配置Vue CLI的配置文件。Vue CLI是一个用于快速搭建Vue.js项目的命令行工具，vue.config.js文件可以设置项目的各种构建和开发配置选项。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>对 jsconfig.json 说明</strong></p><p>上面的项目没有使用 ts 使用了js，但有时候也期望 js 可以做到一些 想ts 的提醒和检测功能 这时候需要目录中<code>jsconfig.json</code>文件</p><p><strong>表示改目录是JavaScript项目的根目录</strong>。jsconfig.json的配置可以对你的文件所在目录下的所有js代码做出个性化支持。jsconfig.json是tsconfig.json的子集。</p><ul><li>文件范围 - 没有jsconfig.json：在此模式下，在Visual Studio Code中打开的JavaScript文件被视为独立单元。 只要文件a.js没有显式引用文件b.ts（使用///引用指令或CommonJS模块），两个文件之间就没有共同的项目上下文。</li><li>显式项目 - 使用jsconfig.json：JavaScript项目是通过jsconfig.json文件定义的。 目录中存在此类文件表示该目录是JavaScript项目的根目录。 文件本身可以选择列出属于项目的文件，要从项目中排除的文件，以及编译器选项（见下文）</li></ul><p>在当我们用打包工具时候设置了路径别名，也可通过配置 jsconfig.json 帮助我们去做到路径提醒</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esnext&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;checkJs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;baseUrl&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;.&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#7F848E;font-style:italic;">// 配置路径别名 </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;paths&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;~/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./node_modules/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;@/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;api/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/api/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;common/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/common/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;components/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/components/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;config/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/config/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;extend/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/extend/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;locale/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/locale/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;router/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/router/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;store/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/store/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;assets/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/assets/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;views/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/views/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;exclude&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;node_modules&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;public&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;dist&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>在工作空间中定一个jsconfig.json文件时，JavaScript体验会得到改进。</p><h2 id="使用vite" tabindex="-1">使用VITE <a class="header-anchor" href="#使用vite" aria-label="Permalink to &quot;使用VITE&quot;">​</a></h2><p>vite版本 也提供了 vue 创建工程化的方式</p><p><strong>安装指令</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">init</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">vue@latest\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>等同执行指令</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">create-vue@next</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>额外知识补充</strong>：npm init 用来初始化我们本地项目的 package.json，然后根据提示，输入项目名，作者名等配置。还可以使用 npm init -y 来实现跳过手动配置，但如果指定了模板了可直接将网络模板下载下来。以上面的命令为例实际<code>npm init vue@latest</code>,等同执行了 <code>npx create-vue@next</code>，通过ViteJs 源码的 packages 文件夹中 <a href="https://github.com/vitejs/vite/tree/main/packages/create-app" target="_blank" rel="noreferrer">create-app</a> 目录可以找到这些工程模板 具体原理 <a href="https://juejin.cn/post/6948202986573135908?searchId=2023081221444116F9FFB96AF8B3D84598" target="_blank" rel="noreferrer">可以参考1</a> <a href="https://juejin.cn/post/7133992076735152136#heading-13" target="_blank" rel="noreferrer">参考2</a></p><p><img src="`+c+`" alt=""></p><ul><li>创建过程的一些选择如图</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Project</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">项目名</span><span style="color:#ABB2BF;">）: </span><span style="color:#E06C75;">toolsdog</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">TypeScript</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">添加TS</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">No</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">JSX</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Support</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">添加JSX支持</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">No</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Router</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Single</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Page</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Application</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">development</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">添加Vue</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">router</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Yes</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Pinia</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">management</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">添加状态管理Pinia</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Yes</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Vitest</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Unit</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">testing</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">为单元测试添加Vitest</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">No</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Cypress</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">both</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Unit</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">and</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">End</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">to</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">End</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">testing</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">为单元测试与端到端测试添加Cypress</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">No</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ESLint</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">quality</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">为代码质量添加ESLint</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Yes</span></span>
<span class="line"><span style="color:#ABB2BF;">✔ </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">formatting</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">为代码格式添加Prettier</span><span style="color:#ABB2BF;">）</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">Scaffolding</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">project</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> .</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">tooldog</span><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#E06C75;">Done</span><span style="color:#ABB2BF;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="`+r+'" alt=""></p><p><img src="'+B+`" alt=""></p><h3 id="项目目录-1" tabindex="-1">项目目录 <a class="header-anchor" href="#项目目录-1" aria-label="Permalink to &quot;项目目录&quot;">​</a></h3><p>以上面配置的为例生成的项目目录进行一个文件介绍</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">.</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">README.md</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 项目的说明文档，通常包含项目的介绍、安装和使用方法等信息。</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">env.d.ts</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># TypeScript类型定义文件，用于声明全局环境变量的类型。</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">index.html</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 项目的入口HTML文件，通常包含加载项目所需的脚本和样式等</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">package.json</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 项目的配置文件，包含了项目的依赖和脚本等信息</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">public</span></span>
<span class="line"><span style="color:#ABB2BF;">|   </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> favicon.ico</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> src</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> App.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> assets</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> base.css</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> logo.svg</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">main.css</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">components</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">HelloWorld.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">TheWelcome.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">WelcomeItem.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">__tests__</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   |   </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> HelloWorld.spec.ts</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">icons</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |       |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">IconCommunity.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |       |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">IconDocumentation.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |       |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">IconEcosystem.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |       |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">IconSupport.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |       </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> IconTooling.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> main.ts</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> router</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   </span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">index.ts</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stores</span></span>
<span class="line"><span style="color:#ABB2BF;">|   |   </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> counter.ts</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">   \`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">views</span></span>
<span class="line"><span style="color:#ABB2BF;">|       |</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">AboutView.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|       </span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> HomeView.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> tsconfig.app.json </span><span style="color:#7F848E;font-style:italic;"># 页面开发的ts 配置项</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> tsconfig.json </span><span style="color:#7F848E;font-style:italic;"># ts 所有配置项的入口</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> tsconfig.node.json </span><span style="color:#7F848E;font-style:italic;"># 运行在node 环境中的 ts 配置项</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> tsconfig.vitest.json </span><span style="color:#7F848E;font-style:italic;"># vitest 需要的 ts 配置项</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> vite.config.ts </span><span style="color:#7F848E;font-style:italic;">#  Vite配置文件，用于构建工具Vite的配置。</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> vitest.config.ts </span><span style="color:#7F848E;font-style:italic;"># Vite测试配置文件，用于构建工具Vite的测试配置</span></span>
<span class="line"><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">yarn.lock</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># Yarn的依赖版本锁定文件，用于确保每次安装的依赖版本一致。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="项目中的tsconfig-配置文件" tabindex="-1">项目中的tsconfig 配置文件 <a class="header-anchor" href="#项目中的tsconfig-配置文件" aria-label="Permalink to &quot;项目中的tsconfig 配置文件&quot;">​</a></h2><p><strong>补充说明 <code>tsconfig.app.json</code> <code>tsconfig.json</code> <code>tsconfig.node.json</code> <code>tsconfig.vitest.json</code> 四个文件</strong></p><p>上面 vite 搭建的 Vue 的项目为例其实app src 中的一些ts 配置例如 dom 的配置基本是不会再 vite.config 中使用到的，一个项目其实除了业务如果细分他是多维度构成，之前将多维的配置都集成在一个文件内做法，如果使用多个 tsconfig 文件来解决其中一些问题，但是会出现新的问题: 就是需要启动多个入口的配置，并不能统一处理</p><p><a href="https://www.typescriptlang.org/docs/handbook/project-references.html" target="_blank" rel="noreferrer">在 TypeScript 3.0中的一个新特性</a>，它允许您将 TypeScript 程序结构化为更小的部分。来解决这个问题 <code> references</code> 字段，可以将多个配置都集中起来在对外暴露出去一个入口</p><ul><li><code>tsconfig.json</code> 作为其他配置的总入口，将其他配置导入到这个入口中</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// &quot;files&quot; 字段为空数组。该字段用于指定要包含在 TypeScript 项目中进行编译的文件列表。通过将文件路径添加到 &quot;files&quot; 字段中，可以告诉 //</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// TypeScript 编译器只对指定的文件进行编译，而不是整个项目目录。如果 &quot;files&quot; 字段为空数组，则表示不指定特定的文件，编译器将默认编译项目中</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 的所有 TypeScript 文件</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;files&quot;</span><span style="color:#ABB2BF;">: [], </span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;references&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./tsconfig.node.json&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./tsconfig.app.json&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./tsconfig.vitest.json&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>tsconfig.app.json 将一些关于 页面开发的ts 配置都集中的文件</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 指定要扩展的基础 TypeScript 配置文件。在此示例中，它扩展了 @vue/tsconfig/tsconfig.dom.json，表示它基于该文件进行配置。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;extends&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;@vue/tsconfig/tsconfig.dom.json&quot;</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 指定要包括在编译中的文件或文件夹的匹配模式。在此示例中，它包括了 env.d.ts、src/**/* 和 src/**/*.vue，表示这些文件和文件夹中的 TypeScript 代码将被编译</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;include&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;env.d.ts&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;src/**/*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;src/**/*.vue&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 指定要排除在编译之外的文件或文件夹的匹配模式。在此示例中，它排除了 src/**/__tests__/*，表示这些文件夹中的测试代码将不会被编译。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;exclude&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;src/**/__tests__/*&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;composite&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 设置为 true，表示启用项目的组合编译。组合编译允许将多个项目组合成一个，以提高构建性能</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;baseUrl&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;.&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 指定相对路径解析的基础目录。在此示例中，它设置为当前目录（&quot;.&quot;）</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;paths&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;@/*&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/*&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">// 指定模块名称的映射到实际文件或文件夹的路径。在此示例中，它将 @/* 映射到 ./src/*，表示在代码中使用 @/ 引用时，将从 src/ 目录下查找相应的模块 帮助编辑</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>tsconfig.node.json 将一些 配置的ts 文件集中</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 指定要扩展的基础 TypeScript 配置文件。在此示例中，它扩展了 @tsconfig/node18/tsconfig.json，表示它基于该文件进行配置。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;extends&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;@tsconfig/node18/tsconfig.json&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 指定要包括在编译中的文件或文件夹的匹配模式。在此示例中，它包括了一系列文件，如 vite.config.*、vitest.config.*、cypress.config.*、nightwatch.conf.* 和 playwright.config.*。这些文件将被包含在编译中</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;include&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;vite.config.*&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;vitest.config.*&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;cypress.config.*&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;nightwatch.conf.*&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;playwright.config.*&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;composite&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 设置为 true，表示启用项目的组合编译。与前一个示例相同，这允许将多个项目组合成一个，以提高构建性能。</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ESNext&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 指定生成的 JavaScript 模块的模块系统。在此示例中，它设置为 &quot;ESNext&quot;，表示使用 ES 模块系统</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;moduleResolution&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Bundler&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 指定模块解析的策略。在此示例中，它设置为 &quot;Bundler&quot;，表示使用打包工具进行模块解析。</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;types&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;node&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">// 指定要包含的类型声明文件。在此示例中，它包括了 &quot;node&quot;，表示项目将使用 Node.js 类型声明。</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>tsconfig.vitest.json 将一些 vitest 的单测配置</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;extends&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./tsconfig.app.json&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// extends：指定要扩展的基础 TypeScript 配置文件。在此示例中，它扩展了当前目录下的 tsconfig.app.json 文件，表示它基于该文件进行配置。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;exclude&quot;</span><span style="color:#ABB2BF;">: [], </span><span style="color:#7F848E;font-style:italic;">// 指定要排除在编译之外的文件或文件夹的匹配模式。在此示例中，它为空数组，表示没有要排除的文件或文件夹。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;composite&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 设置为 true，表示启用项目的组合编译。与前面的示例相同，这允许将多个项目组合成一个，以提高构建性能。</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;lib&quot;</span><span style="color:#ABB2BF;">: [], </span><span style="color:#7F848E;font-style:italic;">// 指定要包含的库文件。在此示例中，它为空数组，表示不包含任何默认库文件。您可以根据项目的需求添加所需的库文件。</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;types&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;node&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;jsdom&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">// 指定要包含的类型声明文件。在此示例中，它包括了 &quot;node&quot; 和 &quot;jsdom&quot;，表示项目将使用 Node.js 和 JSDOM 的类型声明。</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>整套配置文件可以看作，App跑的环境(就是src文件夹里面的)，目地是在浏览器中运行的 和 Vite本身，包括它的配置文件是运行在你计算机内的Node环境</p><ul><li>这里对 <code>types</code> 和 <code>include</code> 字段说明</li></ul><p><code>include</code> 和 <code>types</code> 都是 TypeScript 配置文件 (<code>tsconfig.json</code>) 中的选项，但它们有不同的用途和行为。以下是这两个选项的主要区别：</p><ol><li><p><strong><code>include</code></strong>:</p><ul><li><strong>用途</strong>：定义了 TypeScript 编译器应该包括哪些文件进行编译。</li><li><strong>值</strong>：它接受一个文件和目录的列表，可以使用 glob 模式。例如：<code>[&quot;src/**/*&quot;, &quot;tests/**/*.ts&quot;]</code>。</li><li><strong>行为</strong>：指定了哪些文件应该被 TypeScript 编译器考虑。如果文件不在这个列表中，它将不会被编译（除非它是由其他被包括的文件引用的）。</li></ul></li><li><p><strong><code>types</code></strong>:</p><ul><li><strong>用途</strong>：指定应该包含哪些类型声明文件或 <code>@types</code> 包,在 <code>node_modules/types</code>。</li><li><strong>值</strong>：它接受一个类型声明包的列表。例如：<code>[&quot;node&quot;, &quot;lodash&quot;]</code>。</li><li><strong>行为</strong>：当您设置了 <code>types</code> 选项，只有指定的类型声明文件会被 TypeScript 考虑。这意味着，如果您有其他的 <code>@types</code> 包安装在 <code>node_modules/@types</code> 目录下，但它们没有在 <code>types</code> 列表中，那么它们将不会被加载。</li></ul></li></ol><p>总结：</p><ul><li><code>include</code> 控制哪些源文件应该被编译。</li><li><code>types</code> 控制哪些类型声明文件应该被加载。</li></ul><h2 id="项目中的env-d-ts" tabindex="-1">项目中的env.d.ts <a class="header-anchor" href="#项目中的env-d-ts" aria-label="Permalink to &quot;项目中的env.d.ts&quot;">​</a></h2><p><code>env.d.ts</code> 文件 作为TypeScript类型定义文件，用于声明全局环境变量的类型。 以vite项目为例他的 <code>tsconfig.app.json</code> 文件中 <code>&quot;include&quot;: [&quot;env.d.ts&quot;, &quot;src/**/*&quot;, &quot;src/**/*.vue&quot;]</code> 字段明确将要 ts 在编译的文件列出因此 <code>env.d.ts</code> 会被解析</p><p>需要先了解ts reference 指令：使用 reference 指令时，它会将整个类型声明文件的内容导入到当前文件中。这意味着在当前文件中，您可以使用类型声明文件中定义的所有类型、接口、函数等。这种方式适用于旧版本的 TypeScript 或需要一次性导入所有类型声明的情况。</p><p>点击进入后可以发现 文件内部写法</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/// </span><span style="color:#ABB2BF;font-style:italic;">&lt;</span><span style="color:#E06C75;font-style:italic;">reference</span><span style="color:#ABB2BF;font-style:italic;"> </span><span style="color:#D19A66;font-style:italic;">types</span><span style="color:#56B6C2;font-style:italic;">=</span><span style="color:#98C379;font-style:italic;">&quot;vite/client&quot;</span><span style="color:#ABB2BF;font-style:italic;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个作用是需要先从一个例子说，正常来说 ts 是不识别 css 这种后缀文件的，需要做 这类文件的声明文件，才能让ts 在开发过程中有提示帮助到我们。这种统一需要大量配置的 在 &quot;vite/client&quot; 文件已经帮助配置好了，我们导入即可 <img src="`+i+`" alt=""></p><p>但 &quot;vite/client&quot; 并没有提供 vue 的声明，可在开发中vue 文件没有产生声明报错，使用vscode 安装的 <code>TypeScript Vue Plugin (Volar)</code> 帮我们识别了 vue 文件的类型声明，实际上应该自己配置，配置后的效果</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/// </span><span style="color:#ABB2BF;font-style:italic;">&lt;</span><span style="color:#E06C75;font-style:italic;">reference</span><span style="color:#ABB2BF;font-style:italic;"> </span><span style="color:#D19A66;font-style:italic;">types</span><span style="color:#56B6C2;font-style:italic;">=</span><span style="color:#98C379;font-style:italic;">&quot;vite/client&quot;</span><span style="color:#ABB2BF;font-style:italic;"> /&gt;</span></span>
<span class="line"><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">module</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;*.vue&#39;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">DefineComponent</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 在早期没有 setup 写法时候我们都需要将组件包裹 DefineComponent 这其实就是vue的类型声明，从vue 中导入获取类型</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DefineComponent</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 定义 component 组件的声明类型</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 导出使用</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>甚至在使用第三方库的时候，全局导入 组件后 发现组件没有了类型声明，其实也可以从中解决以 antVue 为例导入所有组件的声明</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/// </span><span style="color:#ABB2BF;font-style:italic;">&lt;</span><span style="color:#E06C75;font-style:italic;">reference</span><span style="color:#ABB2BF;font-style:italic;"> </span><span style="color:#D19A66;font-style:italic;">types</span><span style="color:#56B6C2;font-style:italic;">=</span><span style="color:#98C379;font-style:italic;">&quot;ant-design-vue/typing/global.d.ts&quot;</span><span style="color:#ABB2BF;font-style:italic;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+y+'" alt=""></p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://juejin.cn/post/7126043888573218823" target="_blank" rel="noreferrer">探究 tsconfig.node.json 文件和 references 字段的作用</a></p><p><a href="https://juejin.cn/post/6948202986573135908?searchId=2023081221444116F9FFB96AF8B3D84598" target="_blank" rel="noreferrer">npm init @vitejs/app 到底干了什么</a></p><p><a href="https://juejin.cn/post/7079769333471117343?searchId=202308122058337F651DBD15432AD5FF4A" target="_blank" rel="noreferrer">VScode的jsconfig.json配置文件说明</a></p><p><a href="https://juejin.cn/post/7085235740111536158?searchId=202308122056096164C92B475766D4783E" target="_blank" rel="noreferrer">VSCode使用jsconfig.json来支持webpack alias文件导入</a></p><p><a href="https://juejin.cn/post/7004748084374831117?searchId=202308122058337F651DBD15432AD5FF4A" target="_blank" rel="noreferrer">你需要知道jsconfig.json 都在这里啦</a></p>',76),A=[F];function b(d,C,m,g,q,f){return n(),a("div",null,A)}const h=s(u,[["render",b]]);export{v as __pageData,h as default};
