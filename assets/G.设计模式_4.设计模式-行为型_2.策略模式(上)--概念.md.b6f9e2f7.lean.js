import{_ as s,o as n,c as a,V as l}from"./chunks/framework.96db2af4.js";const p="/learning-notes-blog/images/2023-07-30-16-07-20.png",b=JSON.parse('{"title":"","description":"策略模式解决了如何在运行时根据不同情境选择和应用不同的算法或行为，使得代码更易扩展、修改和维护。","frontmatter":{"description":"策略模式解决了如何在运行时根据不同情境选择和应用不同的算法或行为，使得代码更易扩展、修改和维护。"},"headers":[],"relativePath":"G.设计模式/4.设计模式-行为型/2.策略模式(上)--概念.md","filePath":"G.设计模式/4.设计模式-行为型/2.策略模式(上)--概念.md","lastUpdated":1690900495000}'),o={name:"G.设计模式/4.设计模式-行为型/2.策略模式(上)--概念.md"},e=l("",72),r=[e];function t(c,B,y,i,F,A){return n(),a("div",null,r)}const E=s(o,[["render",t]]);export{b as __pageData,E as default};
