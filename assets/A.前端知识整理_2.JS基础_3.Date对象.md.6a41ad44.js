import{_ as s,o as n,c as a,V as l}from"./chunks/framework.96db2af4.js";const D=JSON.parse('{"title":"","description":"Date 对象比较常用因此特记录","frontmatter":{"description":"Date 对象比较常用因此特记录"},"headers":[],"relativePath":"A.前端知识整理/2.JS基础/3.Date对象.md","filePath":"A.前端知识整理/2.JS基础/3.Date对象.md","lastUpdated":1689666565000}'),o={name:"A.前端知识整理/2.JS基础/3.Date对象.md"},e=l(`<p>Date 对象在 JavaScript 中表示时间的单个瞬间。它可以用于执行各种与日期和时间相关的操作，例如创建、格式化和解析日期。</p><p>在 JavaScript 中，使用 Date 对象创建的日期和时间是基于 UTC 的，但是在输出时会根据本地时区进行调整。所以，可以说 Date 对象创建的是 UTC 时间。</p><ul><li><p><code>GMT</code>是英国伦敦的<strong>皇家格林威治（ Greenwich ）天文台</strong>的标准时间（刚好在本初子午线经过的地方）往<strong>东</strong>的时区时间晚(表示为 <strong>GMT+hh:mm</strong>)、往<strong>西</strong>的时区时间早(表示为 <strong>GMT-hh:mm</strong>) 例子说明：<strong>Sat Jul 09 2022 09:38:28 GMT+0800 (中国标准时间)</strong> 中国是东八区</p></li><li><p><code>UTC</code> 产生因为公转有一定的误差，也会造成GMT的时间会造成一定的误差，于是就提出了根据原子钟计算的标准时间<strong>UTC</strong>（Coordinated Universal Time），UTC 是一种标准时间，它是根据原子钟计算的，用于避免地球自转引起的误差。而本初子午线是一个经度线，它被定义为经过英国伦敦的那条经线。UTC 时间是以本初子午线为基准的，因此可以将 UTC 看作是本初子午线时间的替代。</p></li></ul><p><strong>注</strong>：GMT依然在使用，主要表示的是某个时区中的时间，而UTC是标准的时间</p><h2 id="两种时间格式" tabindex="-1">两种时间格式 <a class="header-anchor" href="#两种时间格式" aria-label="Permalink to &quot;两种时间格式&quot;">​</a></h2><ol><li><code>Thu Jan 01 1970 08:00:01 GMT+0800 (中国标准时间)</code> -- 是RFC 2822标准</li><li><code>2022-07-09T02:14:44.989Z</code> -- ISO 8601标准</li></ol><p>ISO8601，全称为《数据存储和交换形式·信息交换·日期和时间的表示方法》，规定了国际标准日期与时间表示法。</p><ul><li>只使用数字为基本格式。使用短横线&quot;-&quot;间隔开年、月、日为扩展格式。</li><li>每个日期和时间值都有一个固定的位数，必须用前导零填充。</li><li>日期时间表示只能有数字或少数特殊字符组成（如“ - ”，“：”，“T”，“W”和“Z”），不允许出现地方写法，如“1月”或“星期四”等。</li><li>ISO 8601使用24小时制。HH：MM：SS.sss，HH：MM：SS，HH：MM，HH为合规的时间格式。</li><li>用字母T分隔日期和时间。如  20180703T224426Z   或  2018-07-03T22:44:26Z 。</li></ul><p><strong>ISO 8601标准</strong> 个参数说明，<strong>YYYY</strong>：年份，0000 ~ 9999，<strong>MM</strong>：月份，01 ~ 12，<strong>DD</strong>：日，01 ~ 31 <strong>T</strong>：分隔日期和时间，没有特殊含义，可以省略，<strong>HH</strong>：小时，00 ~ 24，<strong>mm</strong>：分钟，00 ~ 59，<strong>ss</strong>：秒，00 ~ 59，<strong>sss</strong>：毫秒，<strong>Z</strong>：时区</p><p><a href="https://blog.51cto.com/u_15308298/3173445" target="_blank" rel="noreferrer">由浅入深，走进中级工程师都未必知道的 JavaScript 时间处理冷知识</a></p><h2 id="date-语法" tabindex="-1">Date 语法 <a class="header-anchor" href="#date-语法" aria-label="Permalink to &quot;Date 语法&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 打印结果为当前地区时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打印结果</span></span>
<span class="line"><span style="color:#E06C75;">Sat</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Jul</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">09</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2022</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">09</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">49</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">39</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">GMT</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">0800</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">中国标准时间</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2022-07-09&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 传入时间格式字符串 这种不推荐 字符串格式 2022/07/09 等等</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打印结果</span></span>
<span class="line"><span style="color:#E06C75;">Sat</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Jul</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">09</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2022</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">GMT</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">0800</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">中国标准时间</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2022</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">07</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">07</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 注1 new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打印结果</span></span>
<span class="line"><span style="color:#E06C75;">Sun</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Aug</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">07</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2022</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">GMT</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">0800</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">中国标准时间</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">// 传入是数字，会被当做毫秒处理表示从1970-01-01 00:00:00 UTC 经过的毫秒数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打印结果</span></span>
<span class="line"><span style="color:#E06C75;">Thu</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Jan</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">GMT</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">0800</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">中国标准时间</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">toISOString</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 打印ISO8601格式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打印结果</span></span>
<span class="line"><span style="color:#98C379;">&#39;2022-07-09T02:14:44.989Z&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>当 Date 作为构造函数调用并传入多个参数时，如果数值大于合理范围时（如月份为 13 或者分钟数为 70），相邻的数值会被调整。比如 new Date(2013, 13, 1) 等于 new Date(2014, 1, 1)，它们都表示日期 2014-02-01（注意月份是从 0 开始的）。其他数值也是类似，new Date(2013, 2, 1, 0, 70) 等于 new Date(2013, 2, 1, 1, 10)，都表示同一个时间：<code>2013-03-01T01:10:00</code></p><h3 id="获取时间戳" tabindex="-1">获取时间戳 <a class="header-anchor" href="#获取时间戳" aria-label="Permalink to &quot;获取时间戳&quot;">​</a></h3><ul><li><strong>Unix 时间戳</strong>：它是一个整数值，表示自1970年1月1日00:00:00 UTC以来的毫秒数</li></ul><ol><li><strong>new Date().getTime()</strong></li><li><strong>new Date().valueOf()</strong></li><li><strong>+new Date()</strong></li><li><strong>Date.now()</strong></li><li><strong>Date.parse(dateString)</strong> 等同于 <strong>new Date(dateString).getTime()</strong> 操作 举个例子，需要符合 RFC2822 或 ISO 8601 日期格式的字符串； 比如YYYY-MM-DDTHH:mm:ss.sssZ，如果输入的格式不能被解析，那么会返回NaN <strong>Date.parse(&#39;2022-07-09T02:14:44.989Z&#39;)</strong> 打印结果<code>1657332884989</code></li></ol><h3 id="从date对象中获取" tabindex="-1">从Date对象中获取 <a class="header-anchor" href="#从date对象中获取" aria-label="Permalink to &quot;从Date对象中获取&quot;">​</a></h3><ol><li><strong>getFullYear()</strong>：获取年份（4 位数）；</li><li><strong>getMonth()</strong>：获取月份，从 0 到 11；</li><li><strong>getDate()</strong>：获取当月的具体日期，从 1 到 31；</li><li><strong>getHours()</strong>：获取小时；</li><li><strong>getMinutes()</strong>：获取分钟；</li><li><strong>getSeconds()</strong>：获取秒钟；</li><li><strong>getMilliseconds()</strong>：获取毫秒；</li><li><strong>getDay()</strong> 获取一周中的第几天，从 0（星期日）到 6（星期六）</li></ol><h3 id="从-date-中赋值" tabindex="-1">从 Date 中赋值 <a class="header-anchor" href="#从-date-中赋值" aria-label="Permalink to &quot;从 Date 中赋值&quot;">​</a></h3><ol><li><strong>setFullYear(year, [month], [date])</strong></li><li><strong>setMonth(month, [date])</strong></li><li><strong>setDate(date)</strong></li><li><strong>setHours(hour, [min], [sec], [ms])</strong></li><li><strong>setMinutes(min, [sec], [ms])</strong></li><li><strong>setSeconds(sec, [ms])</strong></li><li><strong>setMilliseconds(ms)</strong></li><li><strong>setTime(milliseconds)</strong></li></ol><ul><li>注： 设置超范围的数值，它会自动校准</li></ul>`,21),t=[e];function p(r,c,i,B,y,g){return n(),a("div",null,t)}const F=s(o,[["render",p]]);export{D as __pageData,F as default};
