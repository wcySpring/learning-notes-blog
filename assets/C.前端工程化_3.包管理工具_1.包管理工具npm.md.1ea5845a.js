import{_ as n,o as s,c as p,V as a}from"./chunks/framework.96db2af4.js";const e="/learning-notes-blog/images/前端工程化_npm.png",l="/learning-notes-blog/images/前端工程化_npmcli.png",o="/learning-notes-blog/images/前端工程化npmclijs.png",t="/learning-notes-blog/images/前端工程化npm脚本.png",y=JSON.parse('{"title":"","description":"初步了解前端包管理工具npm","frontmatter":{"description":"初步了解前端包管理工具npm","tags":["工程化","npm"]},"headers":[],"relativePath":"C.前端工程化/3.包管理工具/1.包管理工具npm.md","filePath":"C.前端工程化/3.包管理工具/1.包管理工具npm.md","lastUpdated":1686206902000}'),i={name:"C.前端工程化/3.包管理工具/1.包管理工具npm.md"},r=a(`<p>很多语言都有这种包管理工具，Python的pip，Java的Maven一样的作用，包管理，最初的时候Node.js 是一个在德国工作的美国程序员 Ryan Dahl 写的。他写了 Node.js，但是 Node.js 缺少一个包管理器，于是他和 npm 的作者（Isaaz）一拍即合、抱团取暖，最终 Node.js 内置了 npm，当然前端的包管理工具并不局限在npm, 还有 yarn pnpm，现在的GitHub 收购npm，npm 也已经输入微软公司</p><h2 id="npm-能做什么" tabindex="-1">npm 能做什么 <a class="header-anchor" href="#npm-能做什么" aria-label="Permalink to &quot;npm 能做什么&quot;">​</a></h2><ol><li>允许用户从 npm 服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从 npm 服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到 npm 服务器供别人使用。</li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>npm 官方仓库或其他注册的仓库中下载,npm 的背后，是基于 couchdb 的一个数据库，详细记录了每个包的信息，包括作者、版本、依赖、授权信息等。它的一个很重要的作用就是：将开发者从繁琐的包管理工作（版本、依赖等）中解放出来，更加专注于功能的开发。</p></div><p>npm 能做到这三点都是源于npm 组成，npm 并不是在使用意义 cli 工具，他是通过</p><ol><li><p>网站：npm 官方网站是 <a href="https://www.npmjs.com/%EF%BC%8C%E5%AE%83%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%BA%9B%E5%8A%9F%E8%83%BD%EF%BC%8C%E5%A6%82%E6%90%9C%E7%B4%A2%E8%BD%AF%E4%BB%B6%E5%8C%85%E3%80%81%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E3%80%81%E5%8F%91%E5%B8%83%E8%BD%AF%E4%BB%B6%E5%8C%85%E3%80%81%E5%88%9B%E5%BB%BA%E7%BB%84%E7%BB%87%E7%AD%89%E3%80%82" target="_blank" rel="noreferrer">https://www.npmjs.com/，它提供了一些功能，如搜索软件包、管理依赖、发布软件包、创建组织等。</a></p></li><li><p>注册表： npm 的注册表 <a href="https://www.npmjs.com/signup" target="_blank" rel="noreferrer">https://www.npmjs.com/signup</a> 是一个公共数据库，存储了 JavaScript 软件包及其相关的元数据。开发者可以通过注册并登录到 npm 网站，将自己开发的软件包发布到注册表中，供其他人使用。</p></li><li><p>命令行工具（CLI）：npm CLI 是开发者通过命令行或终端界面与 npm 进行交互的工具。开发者可以使用 npm CLI 安装、卸载、更新、发布、搜索软件包等操作。</p></li></ol><h2 id="如何安装使用" tabindex="-1">如何安装使用 <a class="header-anchor" href="#如何安装使用" aria-label="Permalink to &quot;如何安装使用&quot;">​</a></h2><p>npm 不需要单独安装。在安装 Node 的时候，会连带一起安装 npm，但注意的是 npm 本身与 Node 的其他模块没有区别，他也仅仅是一个在node环境运行的js，因此也可以 用 npm 安装自己</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="更新npm" tabindex="-1">更新npm <a class="header-anchor" href="#更新npm" aria-label="Permalink to &quot;更新npm&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">npm@latest</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-g</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 这将安装最新的官方测试版 npm。</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">npm@next</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-g</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 要安装将来发布的版本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="npm-cli" tabindex="-1">npm-cli <a class="header-anchor" href="#npm-cli" aria-label="Permalink to &quot;npm-cli&quot;">​</a></h2><p>npm-cli 作为是日常开发中接触最多部分，为我们提供了一些命令指令，查看提供指令方法可以使用</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者使用</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-l</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行后可以看到 npm cli 提供的所有命令</p><details class="details custom-block"><summary>Details</summary><pre><code>access, adduser, audit, bin, bugs, cache, ci, completion,
config, dedupe, deprecate, diff, dist-tag, docs, doctor,
edit, exec, explain, explore, find-dupes, fund, get, help,
hook, init, install, install-ci-test, install-test, link,
ll, login, logout, ls, org, outdated, owner, pack, ping,
pkg, prefix, profile, prune, publish, query, rebuild, repo,
restart, root, run-script, search, set, set-script,
shrinkwrap, star, stars, start, stop, team, test, token,
uninstall, unpublish, unstar, update, version, view, whoami
</code></pre></details><p>还可以通过 npm 代码去找到这些指令，因为npm 本质上就是通过node 触发的js 脚本，首先需要去找到我们本地安装 npm 的位置，</p><p>在 window 上可以在cmd执行 <code>where npm</code> 可以找到 ，在 linux 上执行 <code>which npm</code> 可以找到</p><p>以window 为例 在&#39;node&#39; 目录下如果你是windows用户可以 查看&#39;npm.cmd&#39; 文件 <img src="`+e+'" alt=""></p><p>里面内容如图&#39;脚本代码&#39; ,通过这段脚本可以发现当在控制台输入&#39;npm&#39;的时候实际执行的命令为 &#39;node \\node_modules\\npm\\bin\\npm-cli.js&#39; <img src="'+l+'" alt=""></p><p>找到&#39; \\node_modules\\npm\\bin\\npm-cli.js&#39; 文件后如图&#39;npm-cli.js&#39; 打开&#39;npm/bin/npm-cli.js&#39;主要看下图这段代码，发现一段&#39;npm.commands&#39;变量调用，可以发现这个变量定义其中&#39;npm&#39; 这个变量是通过 &quot;var npm = require(&#39;../lib/npm.js&#39;)&quot; 引入的 找到 &#39;/lib/npm.js&#39; 文件找到变量&#39;commands&#39;这个</p><p><img src="'+o+'" alt=""></p><p>指令集合往上推大概在&#39;node_modules\\npm\\lib&#39; 文件下找到对应指令的js 文件，就可以发现如图&#39;对应指令&#39;</p><p><img src="'+t+'" alt=""></p>',26),c=[r];function m(d,u,B,h,b,g){return s(),p("div",null,c)}const E=n(i,[["render",m]]);export{y as __pageData,E as default};
