import{_ as t,o as d,c as r,V as e}from"./chunks/framework.96db2af4.js";const n="/learning-notes-blog/images/前端工程化_npmview.png",i="/learning-notes-blog/images/前端工程化npmdisttag.png",p="/learning-notes-blog/images/前端工程化_outdated指令.png",b=JSON.parse('{"title":"","description":"npm cli 指令解释","frontmatter":{"description":"npm cli 指令解释","tags":["工程化","npm"]},"headers":[],"relativePath":"C.前端工程化/3.包管理工具/2.npmcli指令.md","filePath":"C.前端工程化/3.包管理工具/2.npmcli指令.md","lastUpdated":1686206902000}'),a={name:"C.前端工程化/3.包管理工具/2.npmcli指令.md"},l=e('<h2 id="指令总结" tabindex="-1">指令总结 <a class="header-anchor" href="#指令总结" aria-label="Permalink to &quot;指令总结&quot;">​</a></h2><table><thead><tr><th>指令</th><th>指令对应作用</th></tr></thead><tbody><tr><td>access</td><td>控制包的访问权限</td></tr><tr><td>adduser</td><td>添加一个新用户</td></tr><tr><td>audit</td><td>检查包是否存在安全漏洞</td></tr><tr><td>bin</td><td>显示包的可执行文件路径</td></tr><tr><td>bugs</td><td>打开包的问题跟踪页面</td></tr><tr><td>cache</td><td>显示或清除npm缓存</td></tr><tr><td>ci</td><td>在CI/CD环境中安装依赖</td></tr><tr><td>completion</td><td>生成自动补全脚本</td></tr><tr><td>config</td><td>配置npm</td></tr><tr><td>dedupe</td><td>优化依赖树</td></tr><tr><td>deprecate</td><td>标记包为过时</td></tr><tr><td>diff</td><td>显示两个版本之间的差异</td></tr><tr><td>dist-tag</td><td>给包添加或移除标签</td></tr><tr><td>docs</td><td>打开包的文档页面</td></tr><tr><td>doctor</td><td>检查npm环境是否正常</td></tr><tr><td>edit</td><td>编辑包的元数据</td></tr><tr><td>exec</td><td>在包的上下文中执行命令</td></tr><tr><td>explain</td><td>显示包的依赖关系</td></tr><tr><td>explore</td><td>打开包的主页</td></tr><tr><td>find-dupes</td><td>查找重复的依赖项</td></tr><tr><td>fund</td><td>查看包的资助信息</td></tr><tr><td>get</td><td>下载包的tarball</td></tr><tr><td>help</td><td>显示npm帮助信息</td></tr><tr><td>hook</td><td>安装或卸载钩子</td></tr><tr><td>init</td><td>初始化一个新的npm包</td></tr><tr><td>install</td><td>安装依赖</td></tr><tr><td>install-ci-test</td><td>在CI/CD环境中安装依赖并运行测试</td></tr><tr><td>install-test</td><td>安装依赖并运行测试</td></tr><tr><td>link</td><td>将本地包链接到全局</td></tr><tr><td>ll</td><td>列出全局安装的包</td></tr><tr><td>login</td><td>登录npm</td></tr><tr><td>logout</td><td>注销npm</td></tr><tr><td>ls</td><td>列出当前包的依赖项</td></tr><tr><td>org</td><td>管理组织</td></tr><tr><td>outdated</td><td>检查过时的依赖项</td></tr><tr><td>owner</td><td>管理包的所有者</td></tr><tr><td>pack</td><td>打包当前包</td></tr><tr><td>ping</td><td>测试npm服务器是否可用</td></tr><tr><td>pkg</td><td>显示包的元数据</td></tr><tr><td>prefix</td><td>显示或设置全局安装路径</td></tr><tr><td>profile</td><td>显示或编辑npm配置文件</td></tr><tr><td>prune</td><td>删除未使用的依赖项</td></tr><tr><td>publish</td><td>发布包</td></tr><tr><td>query</td><td>查询包的元数据</td></tr><tr><td>rebuild</td><td>重新构建包</td></tr><tr><td>repo</td><td>打开包的代码仓库</td></tr><tr><td>restart</td><td>重启包的脚本</td></tr><tr><td>root</td><td>显示当前包的根目录</td></tr><tr><td>run-script</td><td>运行包的脚本</td></tr><tr><td>search</td><td>搜索包</td></tr><tr><td>set</td><td>设置npm配置项</td></tr><tr><td>set-script</td><td>设置包的脚本</td></tr><tr><td>shrinkwrap</td><td>锁定依赖项的版本</td></tr><tr><td>star</td><td>给包点赞</td></tr><tr><td>stars</td><td>列出用户点赞的包</td></tr><tr><td>start</td><td>启动包的脚本</td></tr><tr><td>stop</td><td>停止包的脚本</td></tr><tr><td>team</td><td>管理团队</td></tr><tr><td>test</td><td>运行包的测试</td></tr><tr><td>token</td><td>创建或撤销访问令牌</td></tr><tr><td>uninstall</td><td>卸载依赖</td></tr><tr><td>unpublish</td><td>撤销发布的包</td></tr><tr><td>unstar</td><td>取消点赞</td></tr><tr><td>update</td><td>更新依赖</td></tr><tr><td>version</td><td>显示或设置包的版本</td></tr><tr><td>view</td><td>查看包的元数据</td></tr><tr><td>whoami</td><td>显示当前登录的用户</td></tr></tbody></table><p><a href="https://docs.npmjs.com/cli/v8/commands/npm" target="_blank" rel="noreferrer">commands</a></p><h2 id="个人常用一些冷门指令" tabindex="-1">个人常用一些冷门指令 <a class="header-anchor" href="#个人常用一些冷门指令" aria-label="Permalink to &quot;个人常用一些冷门指令&quot;">​</a></h2><ul><li><p>npm run 查看当前所有可执行脚本列表</p></li><li><p>&#39;npm view 查看的包名 versions&#39; -- 这个会查到npm服务器上对应查询包的版本所有信息</p></li><li><p>&#39;npm view 查看的包名 version&#39; -- 这种方式只能查看的最新的版本是哪一个也就是tag为latest</p></li></ul><p><img src="'+n+'" alt=""></p><ul><li><p>&#39;npm info 查看的包名&#39; -- 也可以查看所有的版本，但是能查出更多的关于查询包的信息；</p></li><li><p>&#39;npm ls&#39; -- 此命令将以树状结构将已安装软件包的所有版本及其依赖项打印到标准输出。</p></li><li><p>npm ls -g&#39;/ npm ll -- 全局安装依赖</p></li><li><p>&#39;npm ls 查询包&#39; 查看本地安装的查询的包版本，本地没有安装返回empty的结果；加&#39;-g&#39; 查询全局的</p></li><li><p><code> npm dist-tag ls [ &lt; pkg &gt; ]</code>查看某个包的tag 版本</p></li></ul><p><img src="'+i+'" alt=""></p><ul><li>npm outdated 可以帮助我们列出有哪些还没有升级到最新版本的依赖：黄色表示不符合我们指定的语意化版本范围 - 不需要升级，红色表示符合指定的语意化版本范围 - 需要升级</li></ul><p><img src="'+p+'" alt=""></p><ul><li>npm update 会升级所有的红色依赖</li></ul>',11),s=[l];function o(m,c,_,u,g,h){return d(),r("div",null,s)}const k=t(a,[["render",o]]);export{b as __pageData,k as default};
