import{_ as s,c as n,o as a,a8 as l,bS as p,bT as e}from"./chunks/framework.6k5lawSO.js";const F=JSON.parse('{"title":"","description":"express会话控制session、token、cookie","frontmatter":{"description":"express会话控制session、token、cookie","tags":["session","token","cookie"]},"headers":[],"relativePath":"B.NodeJS学习/13.express服务端框架/8.express操作会话控制.md","filePath":"B.NodeJS学习/13.express服务端框架/8.express操作会话控制.md","lastUpdated":1686810106000}'),o={name:"B.NodeJS学习/13.express服务端框架/8.express操作会话控制.md"},r=l(`<p>通过 express 设置 session token cookie</p><h2 id="cookie" tabindex="-1">cookie <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;cookie&quot;">​</a></h2><p>使用express 的cookie 需要使用 cookie-parser 中间件进行配合，我们可以设置cookie</p><ul><li><strong>cookieName</strong>：指定 cookie 的名称，默认为 &#39;connect.sid&#39;。</li><li><strong>secret</strong>：用于签名 cookie 的字符串。这是确保只有服务器可以读取和修改 cookie 的一种安全措施。在服务器端生成一个私钥，并将其保存在一个安全的位置，以防止被黑客获取。当服务器向客户端发送带有加密 cookie 的响应时，它会使用此私钥来加密 cookie 值，在客户端上不可读或不可操作。</li><li><strong>path</strong>：指定 cookie 的可用路径，默认为 &#39;/&#39;，表示整个网站都可以访问该 cookie。</li><li><strong>domain</strong>：指定 cookie 的域名。默认情况下，cookie 将绑定到当前访问网站的域名。</li><li><strong>maxAge</strong>：指定 cookie 的最长有效期。可以使用一个毫秒值或字符串值表示。</li><li><strong>httpOnly</strong>：控制是否通过客户端 JavaScript 可以访问 cookie。如果设置为 true，那么只能通过 HTTP 请求获取 cookie。</li><li><strong>secure</strong>：控制是否仅通过 HTTPS 请求发送 cookie。如果设置为 true，则 cookie 将只在 HTTPS 连接中发送。</li><li><strong>sameSite</strong>：指定 cookie 的浏览器限制级别。sameSite 选项有三种可能值，分别是 strict, lax 和 none。默认值是 strict。 <ul><li>Strict 时，最为严格只有从主站点设置的请求才能够携带相应的 Cookie。也就是说，如果当前用户在主站点登录，并设置了一个带 Cookie 的会话，那么这个会话只能在访问主站点的请求中携带，所有其他的第三方请求都不能够携带该 Cookie。举个例子，假设当前用户在主站点 example.com 上登录，该站点设置了一个 Cookie，而在用户尝试访问子域名 blog.example.com 时，该请求就不能够携带来自 example.com 的 Cookie 或者 当前网页有一个 GitHub 链接，用户点击跳转就不会带有 GitHub 的 Cookie，跳转过去总是未登陆状态。</li><li>Lax 时，主站点设置的 Cookie 可以被从该站点链接的 GET 请求所带例如 连接 预加载 GET表单等，而对于受限的非 GET 请求通过 img、iframe 等标签加载的 URL，Cookie 则不会被携带例如在第三方站点中使用 Post 方法，这些场景都不会携带 Cookie。举个例子，假设当前用户在主站点 example.com 上登录，该站点设置了一个 Cookie，而在用户尝试访问子域名 blog.example.com 时，如果这是一个 GET 请求，那么它可以携带来自 example.com 的 Cookie，但其他类型的请求则不能够携带 Cookie。</li><li>None 时，任何请求都可以携带来自主站点设置的 Cookie，但是必须同时设置 Secure 属性，即 Secure 属性必须为 true。这意味着，Cookie 只能在 HTTPS 连接中使用，而不能在非 HTTPS 连接中使用。举个例子，假设当前用户在主站点 example.com 上登录，该站点设置了一个 Cookie，而在用户尝试通过一个 HTTPS 连接访问非主站点的网站或路径时，它就可以携带来自 example.com 的 Cookie，但在非 HTTPS 连接中则不能携带。</li></ul></li></ul><p><a href="https://www.yuque.com/lipengzhou/nodejs-tutorial/dipn5d#a9928caa" target="_blank" rel="noreferrer">更多参考</a></p><h3 id="使用-express-中-cookie" tabindex="-1">使用 express 中 cookie <a class="header-anchor" href="#使用-express-中-cookie" aria-label="Permalink to &quot;使用 express 中 cookie&quot;">​</a></h3><p>安装</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#50A14F;"> cookie-parser</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A0A1A7;font-style:italic;">// 导入express</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 导入cookie 中间件</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> cookieParser</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;cookie-parser&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 注册</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> app</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">cookieParser</span><span style="color:#383A42;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 创建一个cookie 路由</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/set-cook&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 使用cookie key name value 是wcy  ，设置有效时间为60s</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#986801;"> cookieOptions</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#E45649;">		maxAge</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 60</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 1000</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		httpOnly</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		sameSite</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;none&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		secure</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">cookie</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;name&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;wcy&#39;</span><span style="color:#383A42;">, cookieOptions)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 设置多个key</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">cookie</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;age&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;18&#39;</span><span style="color:#383A42;">, cookieOptions)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">cookie</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;sex&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;1&#39;</span><span style="color:#383A42;">) </span><span style="color:#A0A1A7;font-style:italic;">// 会在浏览器关闭的时候, 销毁 没设置时间的话</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;123&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/&#39;</span><span style="color:#383A42;">, (res, req) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(res.</span><span style="color:#E45649;">cookies</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	req.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;789&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//删除 cookie</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/remove-cookie&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //调用方法</span></span>
<span class="line"><span style="color:#383A42;">  res.</span><span style="color:#4078F2;">clearCookie</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;name&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">  res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;删除成功~~&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//获取 cookie</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/get-cookie&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //获取 cookie</span></span>
<span class="line"><span style="color:#383A42;">  console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(req.</span><span style="color:#E45649;">cookies</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">  res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">\`欢迎您 </span><span style="color:#CA1243;">\${</span><span style="color:#383A42;">req</span><span style="color:#50A14F;">.</span><span style="color:#E45649;">cookies</span><span style="color:#50A14F;">.</span><span style="color:#E45649;">name</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">\`</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">listen</span><span style="color:#383A42;">(</span><span style="color:#986801;">3000</span><span style="color:#383A42;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p><img src="`+p+'" alt="图 1"></p><p>服务端set cookie 时候响应头信息 <img src="'+e+`" alt="图 2"></p><h2 id="使用session" tabindex="-1">使用session <a class="header-anchor" href="#使用session" aria-label="Permalink to &quot;使用session&quot;">​</a></h2><p>Session 本质还是利用了 cookies ,不同点在于cookies 在存储用户信息的时候更多是明文的key value 形式，当然也可以通过加密解密，但cookies 的容量也是有限的通常限制为 4KB（4096字节）。这包括 Cookie 的名称、值和所有属性（如过期时间、路径和域名）。</p><p>如果将cookies 的信息保存在后台中，将id 返回给前端，前端再将id 返回的时候进行反差就可以找到对应实际能容整个过程就是，当用户首次访问 Web 应用程序时，服务器会为该用户创建一个唯一的 Session，并生成一个与之关联的 Session ID。此 Session ID 通常会通过 Cookie 发送给客户端并存储在浏览器中。当用户再次访问应用程序时，浏览器会将 Session ID 发送回服务器，服务器根据 Session ID 查找对应的 Session，从而识别用户并获取其会话信息。</p><h3 id="使用-express-中-session" tabindex="-1">使用 express 中 session <a class="header-anchor" href="#使用-express-中-session" aria-label="Permalink to &quot;使用 express 中 session&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> MongoStore</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;connect-mongo&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> app</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> session</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express-session&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 注册session 中间件</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 3. 设置 session 的中间件</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(</span></span>
<span class="line"><span style="color:#4078F2;">	session</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		name</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;sid&#39;</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">//设置cookie的name，默认值是：connect.sid</span></span>
<span class="line"><span style="color:#E45649;">		secret</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;atguigu&#39;</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">//参与加密的字符串（又称签名）  加盐</span></span>
<span class="line"><span style="color:#E45649;">		saveUninitialized</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> false</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">//是否为每次请求都设置一个cookie用来存储session的id</span></span>
<span class="line"><span style="color:#E45649;">		resave</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		store</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> MongoStore.</span><span style="color:#4078F2;">create</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">			mongoUrl</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;mongodb://127.0.0.1:27017/session&#39;</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">//数据库的连接配置</span></span>
<span class="line"><span style="color:#383A42;">		}),</span></span>
<span class="line"><span style="color:#E45649;">		cookie</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#E45649;">			httpOnly</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// 开启后前端无法通过 JS 操作</span></span>
<span class="line"><span style="color:#E45649;">			maxAge</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 1000</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 10</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// 这一条 是控制 sessionID 的过期时间的！！！</span></span>
<span class="line"><span style="color:#383A42;">		},</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 设置登录 方便使用这里用get</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/login&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> ((req.</span><span style="color:#E45649;">query</span><span style="color:#383A42;">.</span><span style="color:#E45649;">userName</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;admin&#39;</span><span style="color:#0184BC;"> &amp;&amp;</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">query</span><span style="color:#383A42;">.</span><span style="color:#E45649;">password</span><span style="color:#0184BC;"> ===</span><span style="color:#50A14F;"> &#39;admin&#39;</span><span style="color:#383A42;">)) {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">		// 将 登录信息保存在session 中</span></span>
<span class="line"><span style="color:#383A42;">		req.</span><span style="color:#E45649;">session</span><span style="color:#383A42;">.</span><span style="color:#E45649;">userName</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;admin&#39;</span></span>
<span class="line"><span style="color:#383A42;">		req.</span><span style="color:#E45649;">session</span><span style="color:#383A42;">.</span><span style="color:#E45649;">password</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;admin&#39;</span></span>
<span class="line"><span style="color:#383A42;">		req.</span><span style="color:#E45649;">session</span><span style="color:#383A42;">.</span><span style="color:#E45649;">uid</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;258aefccc&#39;</span><span style="color:#A0A1A7;font-style:italic;"> // 用户在数据库id</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;登录成功&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	} </span><span style="color:#A626A4;">else</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;认证失败&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//session 的读取</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/cart&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	//检测 session 是否存在用户数据</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> (req.</span><span style="color:#E45649;">session</span><span style="color:#383A42;">.</span><span style="color:#E45649;">userName</span><span style="color:#383A42;">) {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">\`购物车页面, 欢迎您 </span><span style="color:#CA1243;">\${</span><span style="color:#383A42;">req</span><span style="color:#50A14F;">.</span><span style="color:#E45649;">session</span><span style="color:#50A14F;">.</span><span style="color:#E45649;">userName</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">\`</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	} </span><span style="color:#A626A4;">else</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;您还没有登录~~&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//session 的销毁</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/logout&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	req.</span><span style="color:#E45649;">session</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">destroy</span><span style="color:#383A42;">(() </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;退出成功~~&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">listen</span><span style="color:#383A42;">(</span><span style="color:#986801;">3000</span><span style="color:#383A42;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h2 id="jwt" tabindex="-1">jwt <a class="header-anchor" href="#jwt" aria-label="Permalink to &quot;jwt&quot;">​</a></h2><p>JWT（JSON Web Token ）是目前最流行的跨域认证解决方案，可用于基于 token 的身份验证，JWT 使 token 的生成与校验更规范，使用 jsonwebtoken 如果是 express 可以使用 expressJwt ，<a href="https://jwt.io/libraries" target="_blank" rel="noreferrer">更多语言包</a></p><p>express-jwt是nodejs的一个中间件，他来验证指定http请求的JsonWebTokens的有效性，如果有效就将JsonWebTokens的值设置到req.auth里面，然后路由到相应的router。 此模块允许您使用Node.js应用程序中的JWT令牌来验证HTTP请求。 JWT通常用于保护API端点。</p><p>express-jwt内部引用了jsonwebtoken，对其封装使用。 在实际的项目中这两个都需要引用，他们两个的定位不一样。jsonwebtoken是用来生成token给客户端的，express-jwt是用来验证token的。</p><p>正常jwt 的密钥解析 使用的是 jwt 的 verify api，也就是可以理解为 <code>express-jwt</code> 作为了 具有verify 功能并且是一个中间件更加方便使用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#383A42;">jwt.</span><span style="color:#4078F2;">verify</span><span style="color:#383A42;">(token, </span><span style="color:#50A14F;">&#39;加密盐&#39;</span><span style="color:#383A42;">, (err, data) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">if</span><span style="color:#383A42;">(err){</span></span>
<span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;校验失败~~&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#A626A4;">return</span></span>
<span class="line"><span style="color:#383A42;">}</span></span>
<span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(data);</span></span>
<span class="line"><span style="color:#383A42;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>自定义一个类似 <code>express-jwt</code> 中间件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A0A1A7;font-style:italic;">  //校验 token</span></span>
<span class="line"><span style="color:#383A42;">  jwt.</span><span style="color:#4078F2;">verify</span><span style="color:#383A42;">(token, secret, (err, data) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    //检测 token 是否正确</span></span>
<span class="line"><span style="color:#A626A4;">    if</span><span style="color:#383A42;"> (err) {</span></span>
<span class="line"><span style="color:#A626A4;">      return</span><span style="color:#383A42;"> res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">        code</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;2004&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">        msg</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;token 校验失败~~&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">        data</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> null</span></span>
<span class="line"><span style="color:#383A42;">      })</span></span>
<span class="line"><span style="color:#383A42;">    }</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    //保存用户的信息</span></span>
<span class="line"><span style="color:#383A42;">    req.</span><span style="color:#E45649;">user</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> data; </span><span style="color:#A0A1A7;font-style:italic;">// req.session  req.body</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    //如果 token 校验成功</span></span>
<span class="line"><span style="color:#4078F2;">    next</span><span style="color:#383A42;">();</span></span>
<span class="line"><span style="color:#383A42;">  });</span></span>
<span class="line"><span style="color:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>下面案例 我们使用黑名单效果，如果用户退出将jwt 的信息放入到黑名单中 ，关于 <a href="https://github.com/auth0/express-jwt/blob/master/README.md#L210" target="_blank" rel="noreferrer">express-jwt</a> api 使用</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> install</span><span style="color:#50A14F;"> express</span><span style="color:#50A14F;"> express-jwt</span><span style="color:#50A14F;"> jsonwebtoken</span><span style="color:#50A14F;"> lowdb@1.0.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> express</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 引入lowdb</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> low</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;lowdb&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 使用同步写入</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> FileSync</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;lowdb/adapters/FileSync&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 导入 jwt</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#383A42;"> { </span><span style="color:#986801;">expressjwt</span><span style="color:#383A42;"> } </span><span style="color:#0184BC;">=</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;express-jwt&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> jwt</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;jsonwebtoken&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> app</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> express</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 创建文件</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> adapter</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> new</span><span style="color:#4078F2;"> FileSync</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;db.json&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//获取 db 对象</span></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> db</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> low</span><span style="color:#383A42;">(adapter)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">//初始化数据 检查数据库是否已经初始化</span></span>
<span class="line"><span style="color:#A626A4;">if</span><span style="color:#383A42;"> (</span><span style="color:#0184BC;">!</span><span style="color:#383A42;">db.</span><span style="color:#4078F2;">has</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;users&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">() </span><span style="color:#0184BC;">&amp;&amp;</span><span style="color:#0184BC;"> !</span><span style="color:#383A42;">db.</span><span style="color:#4078F2;">has</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;logout&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">()) {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 用户信息 和 jwt 黑名单退出登录</span></span>
<span class="line"><span style="color:#383A42;">	db.</span><span style="color:#4078F2;">defaults</span><span style="color:#383A42;">({ </span><span style="color:#E45649;">users</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [], </span><span style="color:#E45649;">logoutLog</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [] }).</span><span style="color:#4078F2;">write</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// db 注册到中间件</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">((req, res, next) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	req.</span><span style="color:#E45649;">db</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> db</span></span>
<span class="line"><span style="color:#4078F2;">	next</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 注册json 中间件 解决json 提交</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(express.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> privateKey</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;wcy&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 注册express-jwt请求的 JWT 的有效性，如果有效就将 JWT 的值设置到req.user里面，然后路由到相应的router。</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">(</span></span>
<span class="line"><span style="color:#4078F2;">	expressjwt</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		secret</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> privateKey, </span><span style="color:#A0A1A7;font-style:italic;">// 签名的密钥</span></span>
<span class="line"><span style="color:#E45649;">		algorithms</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span><span style="color:#50A14F;">&#39;HS256&#39;</span><span style="color:#383A42;">],</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">		// credentialsRequired: false, // 是否允许无 Token 请求, false则对无 Token 请求不抛出异常</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">		// requestProperty: &#39;auth&#39;, // 默认解析结果会赋值在 req.auth，也可以通过 requestProperty 来修改</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">		// getToken(req) {req.headers.authorization}, // 自定义解析, 默认是从请求 Headers 的 Authorization 字段来获取 Token 并解析, 通过 getToken 也可以自定义一些解析逻辑，比如使用其他 Header 字段，自定义抛出异常等</span></span>
<span class="line"><span style="color:#4078F2;">		isRevoked</span><span style="color:#383A42;">(req, payload) {</span></span>
<span class="line"><span style="color:#A626A4;">			let</span><span style="color:#383A42;"> jti </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> payload.</span><span style="color:#E45649;">jti</span></span>
<span class="line"><span style="color:#A626A4;">			let</span><span style="color:#383A42;"> logout </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> db.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;logoutLog&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">find</span><span style="color:#383A42;">(jti).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">			return</span><span style="color:#383A42;"> logout</span></span>
<span class="line"><span style="color:#383A42;">		}, </span><span style="color:#A0A1A7;font-style:italic;">// 作废 Token, 由于 Token 通常不进行存储，常用的方式是建立某个字段的黑名单（比如 TokenId），对所有 Token 进行过滤，express-jwt 专门提供了isRevoked回调来处理这种情况</span></span>
<span class="line"><span style="color:#383A42;">	}).</span><span style="color:#4078F2;">unless</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		path</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span><span style="color:#50A14F;">&#39;/login&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;/register&#39;</span><span style="color:#383A42;">], </span><span style="color:#A0A1A7;font-style:italic;">// 指定路径不经过 Token 解析</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 注册用户 api</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">post</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/register&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 获取用户提交的数据</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#383A42;"> { </span><span style="color:#986801;">userName</span><span style="color:#383A42;">, </span><span style="color:#986801;">password</span><span style="color:#383A42;"> } </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">body</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 判断用户是否已经注册</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#986801;"> user</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">db</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;users&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">find</span><span style="color:#383A42;">({ userName }).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> (user) {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">			code</span><span style="color:#0184BC;">:</span><span style="color:#0184BC;"> -</span><span style="color:#986801;">1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">			message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;用户名已经存在&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">		})</span></span>
<span class="line"><span style="color:#A626A4;">		return</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 将用户信息保存到数据库</span></span>
<span class="line"><span style="color:#383A42;">	req.</span><span style="color:#E45649;">db</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;users&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">push</span><span style="color:#383A42;">({ userName, password }).</span><span style="color:#4078F2;">write</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		code</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;注册成功&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 登录api</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">post</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/login&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 获取用户提交的数据</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#383A42;"> { </span><span style="color:#986801;">userName</span><span style="color:#383A42;">, </span><span style="color:#986801;">password</span><span style="color:#383A42;"> } </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">body</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 判断用户是否已经注册</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#986801;"> user</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">db</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;users&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">find</span><span style="color:#383A42;">({ userName }).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> (</span><span style="color:#0184BC;">!</span><span style="color:#383A42;">user) {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">			code</span><span style="color:#0184BC;">:</span><span style="color:#0184BC;"> -</span><span style="color:#986801;">1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">			message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;用户名不存在&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">		})</span></span>
<span class="line"><span style="color:#A626A4;">		return</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 判断密码是否正确</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> (user.</span><span style="color:#E45649;">password</span><span style="color:#0184BC;"> !==</span><span style="color:#383A42;"> password) {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">			code</span><span style="color:#0184BC;">:</span><span style="color:#0184BC;"> -</span><span style="color:#986801;">1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">			message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;密码错误&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">		})</span></span>
<span class="line"><span style="color:#A626A4;">		return</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 生成token</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#986801;"> token</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> jwt.</span><span style="color:#4078F2;">sign</span><span style="color:#383A42;">(</span></span>
<span class="line"><span style="color:#383A42;">		{</span></span>
<span class="line"><span style="color:#0184BC;">			...</span><span style="color:#383A42;">user,</span></span>
<span class="line"><span style="color:#E45649;">			jti</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> Date.</span><span style="color:#4078F2;">now</span><span style="color:#383A42;">(), </span><span style="color:#A0A1A7;font-style:italic;">// 时间戳</span></span>
<span class="line"><span style="color:#383A42;">		},</span></span>
<span class="line"><span style="color:#383A42;">		privateKey,</span></span>
<span class="line"><span style="color:#383A42;">		{</span></span>
<span class="line"><span style="color:#E45649;">			expiresIn</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 60</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 24</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 7</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// 有效期7天</span></span>
<span class="line"><span style="color:#383A42;">		}</span></span>
<span class="line"><span style="color:#383A42;">	)</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 登录成功</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		code</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		data</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> token,</span></span>
<span class="line"><span style="color:#E45649;">		message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;登录成功&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 展示首页</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;首页&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 退出登录</span></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;/logout&#39;</span><span style="color:#383A42;">, (req, res) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 获取用户提交的数据</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#383A42;"> { </span><span style="color:#986801;">userName</span><span style="color:#383A42;">, </span><span style="color:#986801;">jti</span><span style="color:#383A42;"> } </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">auth</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 判断用户是否已经注册</span></span>
<span class="line"><span style="color:#A626A4;">	const</span><span style="color:#986801;"> user</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> req.</span><span style="color:#E45649;">db</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;users&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">find</span><span style="color:#383A42;">({ userName }).</span><span style="color:#4078F2;">value</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#A626A4;">	if</span><span style="color:#383A42;"> (</span><span style="color:#0184BC;">!</span><span style="color:#383A42;">user) {</span></span>
<span class="line"><span style="color:#383A42;">		res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">			code</span><span style="color:#0184BC;">:</span><span style="color:#0184BC;"> -</span><span style="color:#986801;">1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">			message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;用户不存在&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">		})</span></span>
<span class="line"><span style="color:#A626A4;">		return</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">	// 将退出登录的用户信息保存到数据库</span></span>
<span class="line"><span style="color:#383A42;">	req.</span><span style="color:#E45649;">db</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">get</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;logoutLog&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">push</span><span style="color:#383A42;">(jti).</span><span style="color:#4078F2;">write</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		code</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		message</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;退出登录成功&#39;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">use</span><span style="color:#383A42;">((err, req, res, next) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(err)</span></span>
<span class="line"><span style="color:#383A42;">	res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">		code</span><span style="color:#0184BC;">:</span><span style="color:#0184BC;"> -</span><span style="color:#986801;">1</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">		message</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> err.</span><span style="color:#E45649;">message</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">	})</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">app.</span><span style="color:#4078F2;">listen</span><span style="color:#383A42;">(</span><span style="color:#986801;">3000</span><span style="color:#383A42;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br></div></div><h3 id="jwt-的无感刷新" tabindex="-1">jwt 的无感刷新 ？？？ <a class="header-anchor" href="#jwt-的无感刷新" aria-label="Permalink to &quot;jwt 的无感刷新 ？？？&quot;">​</a></h3><h2 id="oauth2-0" tabindex="-1">OAuth2.0 ？？？ <a class="header-anchor" href="#oauth2-0" aria-label="Permalink to &quot;OAuth2.0 ？？？&quot;">​</a></h2><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://www.jianshu.com/p/9b71a1582c40" target="_blank" rel="noreferrer">nodejs express-jwt解析</a></p><p><a href="https://zhoup.top/BlogDetails/374" target="_blank" rel="noreferrer">在Node.js中使用JWT（JSON Web Token）</a></p><p><a href="https://blog.csdn.net/jackyocheung/article/details/105832013" target="_blank" rel="noreferrer">Express项目中： JWT使用方法</a></p><p><a href="https://juejin.cn/post/6844903988970651662" target="_blank" rel="noreferrer">Node.js 使用 express-jwt 解析 JWT</a></p><p><a href="https://juejin.cn/post/7012066434457010184#heading-0" target="_blank" rel="noreferrer">Node鉴权系列3：JWT实现跨站点的单点登录</a></p>`,36),c=[r];function t(i,y,A,b,u,m){return a(),n("div",null,c)}const k=s(o,[["render",t]]);export{F as __pageData,k as default};
