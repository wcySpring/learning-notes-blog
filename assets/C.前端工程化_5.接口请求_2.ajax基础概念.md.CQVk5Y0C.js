import{_ as s,c as n,o as a,a8 as l,cu as p}from"./chunks/framework.6k5lawSO.js";const d=JSON.parse('{"title":"","description":"对前后分离 AJAX 基础了解","frontmatter":{"description":"对前后分离 AJAX 基础了解"},"headers":[],"relativePath":"C.前端工程化/5.接口请求/2.ajax基础概念.md","filePath":"C.前端工程化/5.接口请求/2.ajax基础概念.md","lastUpdated":1697158280000}'),e={name:"C.前端工程化/5.接口请求/2.ajax基础概念.md"},o=l(`<p>要对接口请求有个理解之前要先知道关于前后端分离的产生过程有个了解，早期时候</p><p><strong>服务器端渲染（SSR，server side render）</strong>：客户端发出请求 -&gt; 服务端接收请求并返回相应HTML文档 -&gt; 页面刷新，客户端加载新的HTML文档，<strong>页面是通过后端渲染来完成的</strong></p><p>但这种情况产生弊端当用户点击页面中的某个按钮向服务器发送请求时，页面本质上只是<strong>一些数据发生了变化</strong>，而此时服务器却<strong>要将重绘的整个页面再返回给浏览器加载</strong>，这显然有悖于程序员的“DRY（ Don‘t repeat yourself ）”原则；只是一些数据的变化却迫使服务器要返回整个HTML文档，这本身也会给<strong>网络带宽带来不必要的开销</strong></p><p>后来出现了先后端分离</p><p><strong>客户端渲染</strong>:只向服务器请求新的数据，并且在阻止页面刷新的情况下，动态的替换页面中展示的数据<strong>ajax 出现</strong></p><p><strong>ajax 全称 Asynchronous JavaScript + XML（异步JavaScript和XML）</strong>,2005年被Jesse James Garrett提出的新术语，用来描述一种使用现有技术集合的新方法，包括: HTML 或 XHTML, CSS, JavaScript, DOM, XML, XSLT, 以及最重要XMLHttpRequest。当使用结合了这些技术的AJAX模型以后， <strong>网页应用能够快速地将增量更新呈现在用户界面上，而不需要重载（刷新）整个页面</strong>。这使得程序能够更快地回应用户的操作。尽管X在Ajax中代表XML, 但<strong>由于JSON的许多优势，比如更加轻量以及作为Javascript的一部分，目前JSON的使用比XML更加普遍</strong>。JSON和XML都被用于在Ajax模型中打包信息。</p><h2 id="xmlhttprequest" tabindex="-1">XMLHttpRequest <a class="header-anchor" href="#xmlhttprequest" aria-label="Permalink to &quot;XMLHttpRequest&quot;">​</a></h2><ol><li><p><code>XMLHttpRequest</code>（XHR）对象用于与服务器交互。通过 XMLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。这允许网页在不影响用户操作的情况下，更新页面的局部内容。<code>XMLHttpRequest</code>在[AJAX]编程中被大量使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="noreferrer">参考资料MDN # XMLHttpRequest</a></p></li><li><p>使用四步骤</p></li></ol><ul><li>创建网络请求的<strong>AJAX</strong>对象（使用XMLHttpRequest）</li><li>监听XMLHttpRequest对象状态的变化，或者监听<strong>onload</strong>事件（请求完成时触发）</li><li>配置网络请求（通过<strong>open</strong>方法）</li><li>发送<strong>send</strong>网络请求</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">let</span><span style="color:#383A42;"> xhr </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> new</span><span style="color:#383A42;"> XMLHttpRequest; </span><span style="color:#A0A1A7;font-style:italic;">// 无参时候可以不加括号</span></span>
<span class="line"><span style="color:#383A42;">xhr.</span><span style="color:#4078F2;">open</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;GET&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;/userInfo?id=1&#39;</span><span style="color:#383A42;">); </span><span style="color:#A0A1A7;font-style:italic;">//=&gt;router Query</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// xhr.open(&#39;GET&#39;, &#39;/userInfo/1&#39;); //=&gt;这种router Params后端处理解析url 获取参数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">xhr.</span><span style="color:#4078F2;">onreadystatechange</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;"> () {</span></span>
<span class="line"><span style="color:#A626A4;">    if</span><span style="color:#383A42;"> (xhr.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> !==</span><span style="color:#986801;"> 200</span><span style="color:#383A42;">) </span><span style="color:#A626A4;">return</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">     /**监听请求的过程，在不同的阶段做不同的处理「包含获取服务器的响应信息」</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">     + ajax状态  xhr.readyState</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       + 0 UNSENT  代理被创建，但尚未调用 open() 方法</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       + 1 OPENED    方法已经被调用</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       -----</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       + 2 HEADERS_RECEIVED 响应头信息已经返回</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       + 3 LOADING 响应主体信息正在处理</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">       + 4 DONE 响应主体信息已经返回**/</span></span>
<span class="line"><span style="color:#A626A4;">    if</span><span style="color:#383A42;"> (xhr.</span><span style="color:#E45649;">readyState</span><span style="color:#0184BC;"> ===</span><span style="color:#986801;"> 4</span><span style="color:#383A42;">) { </span><span style="color:#A0A1A7;font-style:italic;">// 要等到数据全部返回因此判断状态为4</span></span>
<span class="line"><span style="color:#383A42;">        console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(xhr.</span><span style="color:#E45649;">response</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">    }</span></span>
<span class="line"><span style="color:#383A42;">};</span></span>
<span class="line"><span style="color:#383A42;">xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="xmlhttprequest其他事件监听" tabindex="-1">XMLHttpRequest其他事件监听 <a class="header-anchor" href="#xmlhttprequest其他事件监听" aria-label="Permalink to &quot;XMLHttpRequest其他事件监听&quot;">​</a></h3><ol><li><strong>onloadstart</strong>：请求开始。</li><li><strong>onprogress</strong>： 一个响应数据包到达，此时整个 response body 都在 response 中。</li><li><strong>onabort</strong>：调用 xhr.abort() 取消了请求。</li><li><strong>onerror</strong>：发生连接错误，例如，域错误。不会发生诸如 404 这类的 HTTP 错误。</li><li><strong>onload</strong>：请求成功完成。</li><li><strong>ontimeout</strong>：由于请求超时而取消了该请求（仅发生在设置了 timeout 的情况下）。</li><li><strong>onloadend</strong>：在 load，error，timeout 或 abort 之后触发。</li></ol><ul><li><strong>注</strong>: onreadystatechange 和 onload。区别只要进入onload请求中，一定是已经到4这个状态了</li></ul><hr><ul><li>下面案例中设置了<code> xhr.responseType</code> 类型决定 <strong><code>content-type</code></strong> 返回的类型，获取HTTP响应的网络状态，可以通过<strong>status和statusText</strong>来获取，不同的是，status 属性保存的状态码是以<strong>数字表示</strong>的，而 statusText 属性保存的状态码是以<strong>字符串表示</strong>的</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">  var</span><span style="color:#383A42;"> formData </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> new</span><span style="color:#4078F2;"> FormData</span><span style="color:#383A42;">();</span></span>
<span class="line"><span style="color:#383A42;">  formData.</span><span style="color:#4078F2;">append</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;username&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;johndoe&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">  formData.</span><span style="color:#4078F2;">append</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;id&#39;</span><span style="color:#383A42;">, </span><span style="color:#986801;">123456</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //创建xhr对象 </span></span>
<span class="line"><span style="color:#A626A4;">  var</span><span style="color:#383A42;"> xhr </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> new</span><span style="color:#4078F2;"> XMLHttpRequest</span><span style="color:#383A42;">();</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //设置xhr请求的超时时间</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#E45649;">timeout</span><span style="color:#0184BC;"> =</span><span style="color:#986801;"> 3000</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //设置响应返回的数据格式</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#E45649;">responseType</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &quot;text&quot;</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //创建一个 post 请求，采用异步</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">open</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;POST&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;/server&#39;</span><span style="color:#383A42;">, </span><span style="color:#986801;">true</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //注册相关事件回调处理函数</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">onload</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">(e) { </span></span>
<span class="line"><span style="color:#A626A4;">    if</span><span style="color:#383A42;">(</span><span style="color:#E45649;">this</span><span style="color:#383A42;">.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> ==</span><span style="color:#986801;"> 200</span><span style="color:#0184BC;">||</span><span style="color:#E45649;">this</span><span style="color:#383A42;">.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> ==</span><span style="color:#986801;"> 304</span><span style="color:#383A42;">){</span></span>
<span class="line"><span style="color:#4078F2;">        alert</span><span style="color:#383A42;">(</span><span style="color:#E45649;">this</span><span style="color:#383A42;">.</span><span style="color:#E45649;">responseText</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">    }</span></span>
<span class="line"><span style="color:#383A42;">  };</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">ontimeout</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">(e) { </span><span style="color:#0184BC;">...</span><span style="color:#383A42;"> };</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">onerror</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">(e) { </span><span style="color:#0184BC;">...</span><span style="color:#383A42;"> };</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#E45649;">upload</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">onprogress</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">(e) { </span><span style="color:#0184BC;">...</span><span style="color:#383A42;"> };</span></span>
<span class="line"><span style="color:#383A42;">  </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  //发送数据</span></span>
<span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(formData);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="content-type-两者form-格式说明" tabindex="-1">Content-Type 两者form 格式说明 <a class="header-anchor" href="#content-type-两者form-格式说明" aria-label="Permalink to &quot;Content-Type 两者form 格式说明&quot;">​</a></h2><ol><li>请求头和响应头中&#39;<strong>Content-Type</strong>&#39; ，用于定义用户的浏览器或相关设备如何显示将要加载的数据，或者如何处理将要加载的数据</li><li><strong>发送请求</strong>设置 <strong>&#39;Content-Type</strong>&#39; 举例： 2.1.格式为<strong>urlencoded</strong>，设置为 &#39;<code>Content-Type:x-www-form-urlencoded</code>&#39;格式的字符串（ <strong>将键值对的参数用&amp;连接起来，如果有空格，将空格转换为<code>+</code>加号；有特殊符号，将特殊符号转换为<code>ASCII HEX</code>值</strong>），是浏览器默认的编码格式。对于Get请求，是将参数转换<code>?key=value&amp;key=value</code>格式，连接到url后，<strong>举个例子</strong>参数在请求体中 格式 <code>&#39;lx=1&amp;name=xxx</code>&#39; 我们在开发过程中使用&#39;qs&#39; 库<code>Qs.stringify/parse</code>:<strong>实现对象和urlencoded格式字符串之间的转换</strong></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#383A42;">  xhr.</span><span style="color:#4078F2;">setRequestHeader</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;Content-Type&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;application/x-www-form-urlencoded&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">    xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(Qs.</span><span style="color:#4078F2;">stringify</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">        lx</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">        name</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;xxx&#39;</span></span>
<span class="line"><span style="color:#383A42;">    }))</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">// 不用qs 自己拼接字符串</span></span>
<span class="line"><span style="color:#383A42;">xhr.</span><span style="color:#4078F2;">setRequestHeader</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;Content-type&quot;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&quot;application/x-www-form-urlencoded&quot;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;name=why&amp;age=18&amp;address=广州市&quot;</span><span style="color:#383A42;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>当然如果不想引入qs 库也可以使用&#39;URLSearchParams&#39;但是URLSearchParams 不支持所有的浏览器</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">let</span><span style="color:#383A42;"> param </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> new</span><span style="color:#4078F2;"> URLSearchParams</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">param.</span><span style="color:#4078F2;">append</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;username&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;admin&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">param.</span><span style="color:#4078F2;">append</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;pwd&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;admin&#39;</span><span style="color:#383A42;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">param.</span><span style="color:#4078F2;">toString</span><span style="color:#383A42;">() </span><span style="color:#A0A1A7;font-style:italic;">//  &#39;username=admin&amp;pwd=admin&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>2.2. <strong>formdata</strong> &#39;<code>Content-Type:form-data</code>&#39; 主要应用于文件的上传或者表单数据提交使用FormData,<code>form-data</code>格式一般是用来进行文件上传的。使用表单上传文件时，必须让表单的 enctype 等于<code>multipart/form-data</code>，因为该值默认值为<code>application/x-www-form-urlencoded</code>，<code>multipart/form-data</code>是基于<strong>post</strong>方法来传递数据的，另外，该格式会生成一个<code>boundary</code>字符串来分割请求头与请求体的</p><ul><li>分割格式是 <code>boundary=\${boundary}</code>之后就是请求体内容了，请求体内容各字段之间以<code>--\${boundary}</code>来进行分割,以<code>--\${boundary}--</code>来结束请求体内容</li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span>// 开始分割</span></span>
<span class="line"><span>boundary=----WebKitFormBoundaryyb1zYhTI38xpQxBK</span></span>
<span class="line"><span></span></span>
<span class="line"><span>------WebKitFormBoundaryyb1zYhTI38xpQxBK</span></span>
<span class="line"><span>Content-Disposition: form-data; name=&quot;city_id&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>------WebKitFormBoundaryyb1zYhTI38xpQxBK  // 请求体内容各字段之间 分割</span></span>
<span class="line"><span>Content-Disposition: form-data; name=&quot;company_id&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2</span></span>
<span class="line"><span>------WebKitFormBoundaryyb1zYhTI38xpQxBK</span></span>
<span class="line"><span>Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;chrome.png&quot;</span></span>
<span class="line"><span>Content-Type: image/png</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PNG ... content of chrome.png ...</span></span>
<span class="line"><span>------WebKitFormBoundaryyb1zYhTI38xpQxBK-- // 结束分割</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span>   xhr.setRequestHeader(&#39;Content-Type&#39;, &#39;multipart/form-data&#39;);</span></span>
<span class="line"><span>   let fd = new FormData;</span></span>
<span class="line"><span>   fd.append(&#39;lx&#39;, 0);</span></span>
<span class="line"><span>   fd.append(&#39;name&#39;, &#39;xxx&#39;);</span></span>
<span class="line"><span>   xhr.send(fd);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>2.3. raw字符串格式</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span>       普通字符串  -&gt; text/plain</span></span>
<span class="line"><span>       JSON字符串 -&gt; application/json  =&gt; JSON.stringify/parse  「常用」</span></span>
<span class="line"><span>       XML格式字符串 -&gt; application/xml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.4. binary进制数据文件「buffer/二进制...」</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span>   一般也应用于文件上传</span></span>
<span class="line"><span>   图片 -&gt; image/jpeg</span></span>
<span class="line"><span>   EXCEL -&gt; application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li><strong>响应主体信息</strong> xhr.response/responseText/responseXML， 服务器返回的响应主体信息的格式 3.1. 字符串「一般是JSON字符串」 「最常用」 3.2. XML格式数据 3.3. 文件流格式数据「buffer/二进制...」</li></ol><p><a href="https://www.cnblogs.com/dreamcc/p/10752604.html" target="_blank" rel="noreferrer">可参考链接谈谈axios配置请求头content-type </a></p><h2 id="封装" tabindex="-1">封装 <a class="header-anchor" href="#封装" aria-label="Permalink to &quot;封装&quot;">​</a></h2><ol><li><strong>下面代码将xhr 挂载到promise 上为了可以使用xhr 一些方法</strong></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> myAjax</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#383A42;">  url,</span></span>
<span class="line"><span style="color:#383A42;">  method </span><span style="color:#0184BC;">=</span><span style="color:#50A14F;"> &quot;get&quot;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">  data </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> {},</span></span>
<span class="line"><span style="color:#383A42;">  timeout </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> 10000</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">  headers </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> {}, </span><span style="color:#A0A1A7;font-style:italic;">// token</span></span>
<span class="line"><span style="color:#383A42;">} </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> {}) {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  // 1.创建对象</span></span>
<span class="line"><span style="color:#A626A4;">  const</span><span style="color:#986801;"> xhr</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> new</span><span style="color:#4078F2;"> XMLHttpRequest</span><span style="color:#383A42;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">  // 2.创建Promise</span></span>
<span class="line"><span style="color:#A626A4;">  const</span><span style="color:#986801;"> promise</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> new</span><span style="color:#C18401;"> Promise</span><span style="color:#383A42;">((resolve, reject) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 2.监听数据</span></span>
<span class="line"><span style="color:#383A42;">    xhr.</span><span style="color:#4078F2;">onload</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">() {</span></span>
<span class="line"><span style="color:#A626A4;">      if</span><span style="color:#383A42;"> (xhr.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> &gt;=</span><span style="color:#986801;"> 200</span><span style="color:#0184BC;"> &amp;&amp;</span><span style="color:#383A42;"> xhr.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> &lt;</span><span style="color:#986801;"> 300</span><span style="color:#383A42;">) {</span></span>
<span class="line"><span style="color:#4078F2;">        resolve</span><span style="color:#383A42;">(xhr.</span><span style="color:#E45649;">response</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">      } </span><span style="color:#A626A4;">else</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#4078F2;">        reject</span><span style="color:#383A42;">({ </span><span style="color:#E45649;">status</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> xhr.</span><span style="color:#E45649;">status</span><span style="color:#383A42;">, </span><span style="color:#E45649;">message</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> xhr.</span><span style="color:#E45649;">statusText</span><span style="color:#383A42;"> })</span></span>
<span class="line"><span style="color:#383A42;">      }</span></span>
<span class="line"><span style="color:#383A42;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 3.设置类型</span></span>
<span class="line"><span style="color:#383A42;">    xhr.</span><span style="color:#E45649;">responseType</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &quot;json&quot;</span></span>
<span class="line"><span style="color:#383A42;">    xhr.</span><span style="color:#E45649;">timeout</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> timeout</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 4.open方法</span></span>
<span class="line"><span style="color:#A626A4;">    if</span><span style="color:#383A42;"> (method.</span><span style="color:#4078F2;">toUpperCase</span><span style="color:#383A42;">() </span><span style="color:#0184BC;">===</span><span style="color:#50A14F;"> &quot;GET&quot;</span><span style="color:#383A42;">) {</span></span>
<span class="line"><span style="color:#A626A4;">      const</span><span style="color:#986801;"> queryStrings</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> []</span></span>
<span class="line"><span style="color:#A626A4;">      for</span><span style="color:#383A42;"> (</span><span style="color:#A626A4;">const</span><span style="color:#986801;"> key</span><span style="color:#A626A4;"> in</span><span style="color:#383A42;"> data) {</span></span>
<span class="line"><span style="color:#383A42;">        queryStrings.</span><span style="color:#4078F2;">push</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">\`</span><span style="color:#CA1243;">\${</span><span style="color:#383A42;">key</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">=</span><span style="color:#CA1243;">\${</span><span style="color:#383A42;">data[key]</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">\`</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">      }</span></span>
<span class="line"><span style="color:#383A42;">      url </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> url </span><span style="color:#0184BC;">+</span><span style="color:#50A14F;"> &quot;?&quot;</span><span style="color:#0184BC;"> +</span><span style="color:#383A42;"> queryStrings.</span><span style="color:#4078F2;">join</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;&amp;&quot;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">      xhr.</span><span style="color:#4078F2;">open</span><span style="color:#383A42;">(method, url)</span></span>
<span class="line"><span style="color:#383A42;">      xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">()</span></span>
<span class="line"><span style="color:#383A42;">    } </span><span style="color:#A626A4;">else</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">      xhr.</span><span style="color:#4078F2;">open</span><span style="color:#383A42;">(method, url)</span></span>
<span class="line"><span style="color:#383A42;">      xhr.</span><span style="color:#4078F2;">setRequestHeader</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;Content-type&quot;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&quot;application/json&quot;</span><span style="color:#383A42;">)</span></span>
<span class="line"><span style="color:#383A42;">      xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#986801;">JSON</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">stringify</span><span style="color:#383A42;">(data))</span></span>
<span class="line"><span style="color:#383A42;">    }</span></span>
<span class="line"><span style="color:#383A42;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">  promise.</span><span style="color:#E45649;">xhr</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> xhr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">  return</span><span style="color:#383A42;"> promise</span></span>
<span class="line"><span style="color:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><ul><li>使用</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> promise</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> myAjax</span><span style="color:#383A42;">({</span></span>
<span class="line"><span style="color:#E45649;">	url</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &quot;&quot;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">	data</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#E45649;">	username</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &quot;&quot;</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#E45649;">	password</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#383A42;">	}</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#383A42;">promise.</span><span style="color:#4078F2;">then</span><span style="color:#383A42;">(res </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;res:&quot;</span><span style="color:#383A42;">, res)</span></span>
<span class="line"><span style="color:#383A42;">}).</span><span style="color:#4078F2;">catch</span><span style="color:#383A42;">(err </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&quot;err:&quot;</span><span style="color:#383A42;">, err)</span></span>
<span class="line"><span style="color:#383A42;">})</span></span>
<span class="line"><span style="color:#383A42;">promise.</span><span style="color:#E45649;">xhr</span><span style="color:#383A42;">.</span><span style="color:#4078F2;">abort</span><span style="color:#383A42;">() </span><span style="color:#A0A1A7;font-style:italic;">// 取消请求</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="倒计时抢购案例" tabindex="-1">倒计时抢购案例 <a class="header-anchor" href="#倒计时抢购案例" aria-label="Permalink to &quot;倒计时抢购案例&quot;">​</a></h2><ol><li>获取服务器时间可以从任意接口或者资源中的响应头Date 获取如图</li></ol><p><img src="`+p+`" alt=""></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-light vp-code" tabindex="0"><code><span class="line"><span style="color:#A0A1A7;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * 两个时间：</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   + 目标时间 18:00:00</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   + 当前时间 </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   目标时间-当前时间=时间差 「毫秒差：计算时间差中包含多少小时，多少分钟，多少秒」 </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   每间隔一秒中都需要重新获取当前时间「定时器 setInterval」，重算时间差等</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * 核心的问题：</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   当前时间是不可以获取客户端本地的（因为本地的时间客户自己可以肆意的修改），需要统一获取服务器的时间「响应头-&gt;Date」</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   + 获取服务器时间会存在时间偏差问题  --&gt; HEAD  AJAX状态码为2</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> * </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> *   在页面不刷新的情况下，每间隔1秒，不是再次从服务器获取（如果这样：服务器会崩溃，用户得到的时间误差也会越大...），而是基于第一次获取的结果之上，手动给其累加1000ms即可</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#A626A4;">let</span><span style="color:#383A42;"> countdownModule </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> (</span><span style="color:#A626A4;">function</span><span style="color:#383A42;"> () {</span></span>
<span class="line"><span style="color:#A626A4;">    let</span><span style="color:#383A42;"> textBox </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> document.</span><span style="color:#4078F2;">querySelector</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;.text&#39;</span><span style="color:#383A42;">),</span></span>
<span class="line"><span style="color:#383A42;">        serverTime </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">        targetTime </span><span style="color:#0184BC;">=</span><span style="color:#0184BC;"> +</span><span style="color:#A626A4;">new</span><span style="color:#4078F2;"> Date</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;2020/12/05 16:00:00&#39;</span><span style="color:#383A42;">),</span></span>
<span class="line"><span style="color:#383A42;">        timer </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> null</span><span style="color:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 获取服务器时间</span></span>
<span class="line"><span style="color:#A626A4;">    const</span><span style="color:#4078F2;"> queryServerTime</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#4078F2;"> queryServerTime</span><span style="color:#383A42;">() {</span></span>
<span class="line"><span style="color:#A626A4;">        return</span><span style="color:#A626A4;"> new</span><span style="color:#C18401;"> Promise</span><span style="color:#383A42;">(resolve </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">            let</span><span style="color:#383A42;"> xhr </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> new</span><span style="color:#383A42;"> XMLHttpRequest;</span></span>
<span class="line"><span style="color:#383A42;">            xhr.</span><span style="color:#4078F2;">open</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;HEAD&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;/&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">            xhr.</span><span style="color:#4078F2;">onreadystatechange</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> () </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">                if</span><span style="color:#383A42;"> ((xhr.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> &gt;=</span><span style="color:#986801;"> 200</span><span style="color:#0184BC;"> &amp;&amp;</span><span style="color:#383A42;"> xhr.</span><span style="color:#E45649;">status</span><span style="color:#0184BC;"> &lt;</span><span style="color:#986801;"> 300</span><span style="color:#383A42;">) </span><span style="color:#0184BC;">&amp;&amp;</span><span style="color:#383A42;"> xhr.</span><span style="color:#E45649;">readyState</span><span style="color:#0184BC;"> ===</span><span style="color:#986801;"> 2</span><span style="color:#383A42;">) {</span></span>
<span class="line"><span style="color:#A626A4;">                    let</span><span style="color:#383A42;"> time </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> xhr.</span><span style="color:#4078F2;">getResponseHeader</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;Date&#39;</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">                    // 获取的时间是格林尼治时间 -&gt; 变为北京时间</span></span>
<span class="line"><span style="color:#4078F2;">                    resolve</span><span style="color:#383A42;">(</span><span style="color:#0184BC;">+</span><span style="color:#A626A4;">new</span><span style="color:#4078F2;"> Date</span><span style="color:#383A42;">(time));</span></span>
<span class="line"><span style="color:#383A42;">                }</span></span>
<span class="line"><span style="color:#383A42;">            };</span></span>
<span class="line"><span style="color:#383A42;">            xhr.</span><span style="color:#4078F2;">send</span><span style="color:#383A42;">(</span><span style="color:#986801;">null</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">        });</span></span>
<span class="line"><span style="color:#383A42;">    };</span></span>
<span class="line"><span style="color:#383A42;">    </span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">    // 倒计时计算</span></span>
<span class="line"><span style="color:#A626A4;">    const</span><span style="color:#4078F2;"> supplyZero</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#4078F2;"> supplyZero</span><span style="color:#383A42;">(val) {</span></span>
<span class="line"><span style="color:#383A42;">        val </span><span style="color:#0184BC;">=</span><span style="color:#0184BC;"> +</span><span style="color:#383A42;">val </span><span style="color:#0184BC;">||</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#A626A4;">        return</span><span style="color:#383A42;"> val </span><span style="color:#0184BC;">&lt;</span><span style="color:#986801;"> 10</span><span style="color:#0184BC;"> ?</span><span style="color:#50A14F;"> \`0</span><span style="color:#CA1243;">\${</span><span style="color:#383A42;">val</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">\`</span><span style="color:#0184BC;"> :</span><span style="color:#383A42;"> val;</span></span>
<span class="line"><span style="color:#383A42;">    };</span></span>
<span class="line"><span style="color:#A626A4;">    const</span><span style="color:#4078F2;"> computed</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> function</span><span style="color:#4078F2;"> computed</span><span style="color:#383A42;">() {</span></span>
<span class="line"><span style="color:#A626A4;">        let</span><span style="color:#383A42;"> diff </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> targetTime </span><span style="color:#0184BC;">-</span><span style="color:#383A42;"> serverTime,</span></span>
<span class="line"><span style="color:#383A42;">            hours </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">            minutes </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">,</span></span>
<span class="line"><span style="color:#383A42;">            seconds </span><span style="color:#0184BC;">=</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#A626A4;">        if</span><span style="color:#383A42;"> (diff </span><span style="color:#0184BC;">&lt;=</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">) {</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">            // 到达抢购时间了</span></span>
<span class="line"><span style="color:#383A42;">            textBox.</span><span style="color:#E45649;">innerHTML</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> &#39;00:00:00&#39;</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#4078F2;">            clearInterval</span><span style="color:#383A42;">(timer);</span></span>
<span class="line"><span style="color:#A626A4;">            return</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#383A42;">        }</span></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">        // 没到时间则计算即可</span></span>
<span class="line"><span style="color:#383A42;">        hours </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> Math.</span><span style="color:#4078F2;">floor</span><span style="color:#383A42;">(diff </span><span style="color:#0184BC;">/</span><span style="color:#383A42;"> (</span><span style="color:#986801;">1000</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#383A42;">));</span></span>
<span class="line"><span style="color:#383A42;">        diff </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> diff </span><span style="color:#0184BC;">-</span><span style="color:#383A42;"> hours </span><span style="color:#0184BC;">*</span><span style="color:#986801;"> 1000</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#383A42;">        minutes </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> Math.</span><span style="color:#4078F2;">floor</span><span style="color:#383A42;">(diff </span><span style="color:#0184BC;">/</span><span style="color:#383A42;"> (</span><span style="color:#986801;">1000</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#383A42;">));</span></span>
<span class="line"><span style="color:#383A42;">        diff </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> diff </span><span style="color:#0184BC;">-</span><span style="color:#383A42;"> minutes </span><span style="color:#0184BC;">*</span><span style="color:#986801;"> 1000</span><span style="color:#0184BC;"> *</span><span style="color:#986801;"> 60</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#383A42;">        seconds </span><span style="color:#0184BC;">=</span><span style="color:#383A42;"> Math.</span><span style="color:#4078F2;">floor</span><span style="color:#383A42;">(diff </span><span style="color:#0184BC;">/</span><span style="color:#986801;"> 1000</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">        textBox.</span><span style="color:#E45649;">innerHTML</span><span style="color:#0184BC;"> =</span><span style="color:#50A14F;"> \`</span><span style="color:#CA1243;">\${</span><span style="color:#4078F2;">supplyZero</span><span style="color:#383A42;">(hours)</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">:</span><span style="color:#CA1243;">\${</span><span style="color:#4078F2;">supplyZero</span><span style="color:#383A42;">(minutes)</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">:</span><span style="color:#CA1243;">\${</span><span style="color:#4078F2;">supplyZero</span><span style="color:#383A42;">(seconds)</span><span style="color:#CA1243;">}</span><span style="color:#50A14F;">\`</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#383A42;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A626A4;">    return</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#A626A4;">        async</span><span style="color:#4078F2;"> init</span><span style="color:#383A42;">() {</span></span>
<span class="line"><span style="color:#383A42;">            serverTime </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> await</span><span style="color:#4078F2;"> queryServerTime</span><span style="color:#383A42;">();</span></span>
<span class="line"><span style="color:#4078F2;">            computed</span><span style="color:#383A42;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0A1A7;font-style:italic;">            // 设置定时器   </span></span>
<span class="line"><span style="color:#383A42;">            timer </span><span style="color:#0184BC;">=</span><span style="color:#4078F2;"> setInterval</span><span style="color:#383A42;">(() </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span>
<span class="line"><span style="color:#383A42;">                serverTime </span><span style="color:#0184BC;">+=</span><span style="color:#986801;"> 1000</span><span style="color:#383A42;">;</span></span>
<span class="line"><span style="color:#4078F2;">                computed</span><span style="color:#383A42;">();</span></span>
<span class="line"><span style="color:#383A42;">            }, </span><span style="color:#986801;">1000</span><span style="color:#383A42;">);</span></span>
<span class="line"><span style="color:#383A42;">        }</span></span>
<span class="line"><span style="color:#383A42;">    };</span></span>
<span class="line"><span style="color:#383A42;">})();</span></span>
<span class="line"><span style="color:#383A42;">countdownModule.</span><span style="color:#4078F2;">init</span><span style="color:#383A42;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div>`,40),r=[o];function t(c,i,y,A,b,u){return a(),n("div",null,r)}const g=s(e,[["render",t]]);export{d as __pageData,g as default};
