import{_ as s,o as n,c as a,V as p}from"./chunks/framework.96db2af4.js";const u=JSON.parse('{"title":"","description":"限制项目使用的工具","frontmatter":{"description":"限制项目使用的工具"},"headers":[],"relativePath":"H.各种练习项目/Vue3项目搭建/10.项目中的各种小工具/限制项目只能使用pnpm.md","filePath":"H.各种练习项目/Vue3项目搭建/10.项目中的各种小工具/限制项目只能使用pnpm.md","lastUpdated":1695881925000}'),l={name:"H.各种练习项目/Vue3项目搭建/10.项目中的各种小工具/限制项目只能使用pnpm.md"},e=p(`<p>如果你想限制统一团队使用的包管理工具，可以创建校验脚本，创建文件 <code>scripts/preinstall.js</code>,编写代码</p><p><code>p<wbr>rocess.env.npm_execpath</code> 是一个 Node.js 环境变量，它包含了执行 npm（或兼容的包管理工具，如 yarn、pnpm 等）命令时的完整路径。这个环境变量在 npm 的生命周期脚本（如 preinstall、install、postinstall 等）中可用。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">/pnpm/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">npm_execpath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[33mThis repository must using pnpm as the package manager \`</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">\` for scripts to work properly.</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// if (/yarn/.test(p<wbr>rocess.env.npm_execpath || &#39;&#39;)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   // 执行适用于 yarn 的代码</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// } else if (/npm/.test(p<wbr>rocess.env.npm_execpath || &#39;&#39;)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   // 执行适用于 npm 的代码</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>在package.json 使用脚本指令， <code>preinstall</code> 是一个在 Node.js 的 npm（或其他兼容的包管理工具，如 yarn、pnpm 等）生命周期脚本中使用的钩子。当你运行 <code>npm install</code> 或者在项目中添加一个新的依赖时， <code>preinstall</code> 脚本会在实际安装依赖之前执行</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;preinstall&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node ./scripts/preinstall.js&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="pnpm-自带检查指令" tabindex="-1">pnpm 自带检查指令 <a class="header-anchor" href="#pnpm-自带检查指令" aria-label="Permalink to &quot;pnpm 自带检查指令&quot;">​</a></h2><p>当您在项目中使用 pnpm 时，为了防止开发人员使用其他包管理器，可以在 package.json 中添加以下预安装脚本 <a href="https://pnpm.io/only-allow-pnpm" target="_blank" rel="noreferrer">Only allow pnpm</a></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">&quot;preinstall&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;npx only-allow pnpm&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),o=[e];function r(t,c,i,B,y,m){return n(),a("div",null,o)}const b=s(l,[["render",r]]);export{u as __pageData,b as default};
