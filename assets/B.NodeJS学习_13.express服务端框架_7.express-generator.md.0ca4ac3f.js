import{_ as s,o as n,c as a,V as l}from"./chunks/framework.96db2af4.js";const u=JSON.parse('{"title":"","description":"做一个todo express 实现的简单案例，使用express脚手架搭建项目，完成一个项目简单流程开发","frontmatter":{"description":"做一个todo express 实现的简单案例，使用express脚手架搭建项目，完成一个项目简单流程开发","tags":["服务端","express"]},"headers":[],"relativePath":"B.NodeJS学习/13.express服务端框架/7.express-generator.md","filePath":"B.NodeJS学习/13.express服务端框架/7.express-generator.md","lastUpdated":1686206902000}'),p={name:"B.NodeJS学习/13.express服务端框架/7.express-generator.md"},e=l(`<p>关于 <code>express generator</code>, 是一个官方提供的 Express 应用程序生成器，可以快速创建一个基本的 Express 应用程序骨架。它提供了一些预设的目录结构、文件和代码，可以帮助开发者快速搭建一个 Express 应用程序，并且可以选择使用不同的模板引擎。</p><p>使用 <code>Express Generator</code> 可以大大提高开发效率，避免了从头开始创建一个 Express 应用程序的繁琐过程。以下是使用 Express Generator 创建一个</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">express-generator</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--view=ejs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="生成的目录" tabindex="-1">生成的目录 <a class="header-anchor" href="#生成的目录" aria-label="Permalink to &quot;生成的目录&quot;">​</a></h2><p>使用 express 生成器生成的目录如下</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">├── bin</span></span>
<span class="line"><span style="color:#abb2bf;">│   └── www</span></span>
<span class="line"><span style="color:#abb2bf;">├── public</span></span>
<span class="line"><span style="color:#abb2bf;">│   ├── images</span></span>
<span class="line"><span style="color:#abb2bf;">│   ├── javascripts</span></span>
<span class="line"><span style="color:#abb2bf;">│   └── stylesheets</span></span>
<span class="line"><span style="color:#abb2bf;">│       └── style.css</span></span>
<span class="line"><span style="color:#abb2bf;">├── routes</span></span>
<span class="line"><span style="color:#abb2bf;">│   ├── index.js</span></span>
<span class="line"><span style="color:#abb2bf;">│   └── users.js</span></span>
<span class="line"><span style="color:#abb2bf;">├── views</span></span>
<span class="line"><span style="color:#abb2bf;">│   ├── error.ejs</span></span>
<span class="line"><span style="color:#abb2bf;">│   ├── index.ejs</span></span>
<span class="line"><span style="color:#abb2bf;">│   └── layout.ejs</span></span>
<span class="line"><span style="color:#abb2bf;">├── app.js</span></span>
<span class="line"><span style="color:#abb2bf;">├── package.json</span></span>
<span class="line"><span style="color:#abb2bf;">└── README.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>app.js：Express 应用程序的入口文件，用于配置和启动应用程序。</li><li>bin/www：负责启动服务器的可执行文件。</li><li>package.json：用于描述项目及其依赖项的元数据文件。</li><li>public：存放静态文件的目录，包括图片、样式表和 JavaScript 文件。 <ul><li>images：存放图片文件的目录。</li><li>javascripts：存放浏览器端 JavaScript 文件的目录。</li><li>stylesheets：存放样式表文件的目录。</li></ul></li><li>routes：存放路由文件的目录，包括应用程序中的所有路由映射。 <ul><li>index.js：处理应用程序的根路径。</li><li>users.js：处理用户相关路径。</li></ul></li><li>views：存放 Express 视图文件的目录，用于呈现页面给用户。 <ul><li>error.ejs：展示错误信息的视图文件。</li><li>index.ejs：应用程序的主页视图文件。</li></ul></li></ul><h3 id="生成的app-js-带来的知识点" tabindex="-1">生成的app.js 带来的知识点 <a class="header-anchor" href="#生成的app-js-带来的知识点" aria-label="Permalink to &quot;生成的app.js 带来的知识点&quot;">​</a></h3><p>通过生成的 app.js 文件来看带来的知识点</p><p>中间件上:</p><ul><li><p>http-errors 是一个用于创建 HTTP 错误的 Node.js 模块。使用 http-errors 可以方便地自定义错误消息和错误状态码。http-errors生成的error继承Error,所以可以通过error.message error.name error.stack分别获得错误的信息，名称，还有栈。同时它还多了一个error.status,该字段是http状态码</p></li><li><p>cookie-parser 是一个用于解析 cookie 的 Node.js 模块。Express 应用程序中，可以使用 cookie-parser 模块来访问和解析 cookie。</p></li><li><p>morgan 是一个 HTTP 请求日志中间件，用于记录应用程序的 HTTP 请求日志。在 Express 应用程序中，morgan 通常会添加到中间件堆栈中，以捕获和记录 HTTP 请求日志。中间件会将日志信息输出到控制台，也可以通过配置将日志输出到指定的文件中，通过查看文件或使用日志管理软件（如 Logstash 或 Splunk）来查看日志。您还可以使用 morgan 中间件提供的其他选项和方法来自定义日志的格式和输出方式</p></li><li><p>express.json() 和 express.urlencoded 在之前我们提到处理时候使用的是 body-parser ，因为在以前的版本中，为了解析请求体数据，Express 需要依赖于第三方模块 body-parser。但在 Express 4.x 版本以后，中间件函数 <code>express.json()</code> 和 <code>express.urlencoded()</code> 被添加到了 Express 的核心中，因此不再需要安装和引入 body-parser 模块了,这会将解析后的<strong>请求体数据</strong>绑定到 req.body 对象中</p></li></ul><div class="tip custom-block"><p class="custom-block-title">关于 express.urlencoded() 处理的数据格式</p><p><code>express.urlencoded({ extended: false })</code> 方法解析的格式是 <code>x-www-form-urlencoded</code>，即 <code>application/x-www-form-urlencoded</code> 格式。这种格式是常用的 HTTP POST 请求数据提交方式，会将 HTTP 请求参数编码为键值对并以多个名称/值对以 <code>&amp;</code> 符号分隔。例如，以下是一个请求数据字符串的示例：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">name=John%20Doe&amp;age=25</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个字符串对应着两个请求参数：<code>name</code> 和 <code>age</code>，它们分别对应着键值对 <code>name=John%20Doe</code> 和 <code>age=25</code>。在服务器端，<code>express.urlencoded({ extended: false })</code> 方法可以将这种格式的请求数据解析为一个 JavaScript 对象，以便我们在后续的处理中使用。</p><p>当将 extended 参数设置为 true 时，express.urlencoded() 方法可以解析更多的请求数据格式。具体来说，它可以处理具有嵌套结构的对象、数组、布尔值和其他复杂的数据类型。例如，如果我们使用以下方式提交的表单数据：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">action</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">method</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;POST&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;user[name]&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;John Doe&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;user[age]&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;30&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;checkbox&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;product[]&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;product1&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">checked</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;checkbox&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;product[]&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;product2&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;radio&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;gender&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;male&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;radio&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;gender&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;female&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">checked</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;submit&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>则使用 extended: true 选项解析后得到的数据格式为：</p><p>{ user: { name: &#39;John Doe&#39;, age: &#39;30&#39; }, product: [&#39;product1&#39;], gender: &#39;female&#39; } 从上面的例子可以看出，extended: true 选项可以让我们更方便地处理复杂的表单数据。</p></div><p>其他</p><ul><li>res.locals 在 Express 应用程序中，可以把一些变量存放在 res.locals 对象中，这些变量会被当做本地变量传递给渲染视图的模板引擎这也就是为什么没传递对象数据也能在页面被解析了</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">createError</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;http-errors&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入http-errors模块，用于创建http错误。</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">express</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;express&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入express框架</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入nodejs内置模块path，用于处理文件路径相关操作</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">cookieParser</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;cookie-parser&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入cookie-parser模块，用于解析cookie</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">logger</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;morgan&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入morgan模块，用于输出日志</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">indexRouter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./routes/index&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入index.js文件</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">usersRouter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./routes/users&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 引入users.js文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">express</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 创建app应用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// view engine setup</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;views&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;views&#39;</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// 设置views文件夹路径</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;view engine&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;ejs&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 设置使用ejs模板引擎</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">logger</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dev&#39;</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// 使用morgan输出日志，dev模式输出颜色有区分</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">express</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">json</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">// 解析json格式的请求体</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">express</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">urlencoded</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">extended</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> })) </span><span style="color:#7F848E;font-style:italic;">// 解析urlencoded格式的请求体，extended为false表示值可以是字符串或数组形式，true表示可以包含任何数据类型。</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">cookieParser</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">// 解析cookie</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">express</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">static</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;public&#39;</span><span style="color:#ABB2BF;">))) </span><span style="color:#7F848E;font-style:italic;">// 静态文件目录，用于存放css、js、images文件等</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">indexRouter</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 处理应用程序的根路径请求</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/users&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">usersRouter</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 处理应用程序的/users路径请求</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 请求没有被前面的任何一个中间件或处理器匹配到，它就会被这段代码所捕获，然后进入错误处理流程。因此可以处理404错误。</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 此时next 是由参数的因此 将会跳过所有的中间件和路由，直接进入错误处理流程。将进入错误中间</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">createError</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">404</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// 捕获404错误并转发到错误处理程序</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 我是错误中间件</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// 在 Express 应用程序中，可以把一些变量存放在 res.locals 对象中，这些变量会被当做本地变量传递给渲染视图的模板引擎</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">locals</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">err</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 设置res.locals.message为错误信息</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">locals</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">req</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;env&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;development&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> {} </span><span style="color:#7F848E;font-style:italic;">// 设置res.locals.error为错误对象（仅在开发环境下）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// render the error page</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">status</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">err</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">500</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 设置状态码为错误对象的状态码或500（服务器内部错误）</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 渲染错误页</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 导出app对象</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h3 id="express-generator-生成bin-www-文件作用" tabindex="-1">Express Generator 生成bin/www 文件作用 ？？ <a class="header-anchor" href="#express-generator-生成bin-www-文件作用" aria-label="Permalink to &quot;Express Generator 生成bin/www 文件作用 ？？&quot;">​</a></h3><p>需要后续了解</p>`,18),o=[e];function r(t,c,B,y,i,F){return n(),a("div",null,o)}const b=s(p,[["render",r]]);export{u as __pageData,b as default};
