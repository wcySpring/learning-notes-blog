import{_ as s,o as n,c as a,V as l}from"./chunks/framework.96db2af4.js";const b=JSON.parse('{"title":"","description":"项目帮助自动化去引入组件依赖","frontmatter":{"description":"项目帮助自动化去引入组件依赖"},"headers":[],"relativePath":"H.各种练习项目/Vue3项目搭建/5.项目中组件库引入.md","filePath":"H.各种练习项目/Vue3项目搭建/5.项目中组件库引入.md","lastUpdated":1695881925000}'),p={name:"H.各种练习项目/Vue3项目搭建/5.项目中组件库引入.md"},e=l(`<p>在项目开发使用组件时候，分全量安装 和 按需引入 自动导入三种方式</p><h2 id="全局引入" tabindex="-1">全局引入 <a class="header-anchor" href="#全局引入" aria-label="Permalink to &quot;全局引入&quot;">​</a></h2><p><strong>全局引入（Global Import）</strong> 全局引入意味着一旦组件被引入，它就可以在整个 Vue 应用中使用，无需在每个单文件组件（SFC）中单独引入。这种使用方式 一般在在你的主入口文件（通常是 <code>main.js</code> 或 <code>main.ts</code>）中,以 Element Plus 为例：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ElementPlus</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 全部组件导入</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus/lib/theme-chalk/index.css&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 全部样式导入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ElementPlus</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果想让组件有ts 提示可以导入 <code>ElementPlus</code> 的类型声明文件，你需要先使用 Volar，请在 tsconfig.json 中通过 compilerOptions.type 指定全局组件类型：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/// </span><span style="color:#ABB2BF;font-style:italic;">&lt;</span><span style="color:#E06C75;font-style:italic;">reference</span><span style="color:#ABB2BF;font-style:italic;"> </span><span style="color:#D19A66;font-style:italic;">types</span><span style="color:#56B6C2;font-style:italic;">=</span><span style="color:#98C379;font-style:italic;">&quot;element-plus/global&quot;</span><span style="color:#ABB2BF;font-style:italic;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// tsconfig.json</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;types&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;element-plus/global&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>优点: 简单易用，不需要在每个组件中单独引入。</li><li>缺点: 可能会增加最终的打包体积，因为即使你没有使用某个组件，它也会被包括在内</li></ul><h2 id="按需引入" tabindex="-1">按需引入 <a class="header-anchor" href="#按需引入" aria-label="Permalink to &quot;按需引入&quot;">​</a></h2><p>按需引入（On-Demand Import）意味着只有当组件实际被使用时，它才会被引入和打包。我们可以手动在页面引入需要的组件 和 组件样式</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;primary&quot;</span><span style="color:#ABB2BF;">&gt;Primary Button&lt;/</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">&gt;Default Button&lt;/</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;dashed&quot;</span><span style="color:#ABB2BF;">&gt;Dashed Button&lt;/</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">&lt;!-- 其他Button的使用方式 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">setup</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 注意修改引入路径</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scss&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">@import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/button/style&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#C678DD;">添加其他样式导入</span></span>
<span class="line"><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>当然也可以在入口文件将这个事解决掉，这样就不用在每个页面都引入了</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createApp</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./App.vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Input</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">DatePicker</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">/* 其他组件 */</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入需要的组件</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/button/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入组件的样式</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/input/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入Input组件的样式</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/date-picker/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入DatePicker组件的样式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 导入其他组件的样式 */</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./router&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 如果使用了路由，导入路由实例</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 注册需要的组件</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Input</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">DatePicker</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 注册其他组件 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果使用了路由，挂载路由实例</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">router</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#app&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>也可以将这部分注册的方法进行封装</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Input</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">DatePicker</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">/* 其他组件 */</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 封装的批量注册方法</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">registerAntDesignComponents</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">app</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">App</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">components</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Input</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">DatePicker</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">/* 其他组件 */</span></span>
<span class="line"><span style="color:#ABB2BF;">  ];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">components</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">component</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">registerAntDesignComponents</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>在 main.ts 中使用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createApp</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./App.vue&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">registerAntDesignComponents</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./registerAntDesignComponents&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入注册方法</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/button/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入组件的样式</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/input/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入Input组件的样式</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue/lib/date-picker/style&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 导入DatePicker组件的样式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 导入其他组件的样式 */</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./router&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 如果使用了路由，导入路由实例</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用封装的注册方法</span></span>
<span class="line"><span style="color:#61AFEF;">registerAntDesignComponents</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 如果使用了路由，挂载路由实例</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">router</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#app&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>也可以自定义组件名导入</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ElButton</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ElButton</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ElButton</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>上面的方法还需要每次都要手动导入css 因此后来诞生了新的方法，通过<code>babel-plugin-import</code>来解决引入组件还需要引入样式 来进行按需加载，加入这个插件后，可以省去 style 的引入。就可以直接写法如下不用引入css</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Button</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ant-design-vue&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>但这种仍然需要手动引入组件，而且还必须使用 babel</p><p>但在element-plus中，可以使用 <a href="https://github.com/element-plus/unplugin-element-plus/blob/main/README.zh-CN.md" target="_blank" rel="noreferrer"><code>unplugin-element-plus</code></a> 插件来替代 <code>babel-plugin-import</code>，当使用插件会自动转换，针对不同打包工具使用可以<a href="https://github.com/element-plus/unplugin-element-plus/blob/main/README.zh-CN.md" target="_blank" rel="noreferrer">参考</a> 或者可以使用 <a href="https://github.com/vbenjs/vite-plugin-style-import/issues" target="_blank" rel="noreferrer">vite-plugin-style-import</a>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ElButton</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//    ↓ ↓ ↓ ↓ ↓ ↓</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ElButton</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;element-plus/es/components/button/style/css&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>优点: 减少了最终的打包体积，只有实际使用的组件会被包括。</li><li>缺点: 需要在每个使用组件的文件中单独引入，稍微繁琐。</li></ul><h2 id="自动导入-目前主流" tabindex="-1">自动导入(目前主流) <a class="header-anchor" href="#自动导入-目前主流" aria-label="Permalink to &quot;自动导入(目前主流)&quot;">​</a></h2><p>自动导入可以分为两大类<strong>自动导入组件</strong>和<strong>第三方库</strong>，组件就是我们常见的vue 第三方组件库，至于 第三方库 这里指的是 第三方手动导入的例如 dayjs 等第三方js 工具库</p><p>正是这样的两种分类因此自动导入就有了两种功能的自动导入库，<code>unplugin-vue-components</code> 和 <code>unplugin-auto-import</code></p><h3 id="unplugin-vue-components" tabindex="-1">unplugin-vue-components <a class="header-anchor" href="#unplugin-vue-components" aria-label="Permalink to &quot;unplugin-vue-components&quot;">​</a></h3><p><a href="https://www.npmjs.com/package/unplugin-vue-components" target="_blank" rel="noreferrer"><code>unplugin-vue-components</code></a> <strong>专为 Vue 组件设计，可以自动导入 支持 Vue2 和 Vue3 组件和指令</strong>。可以不需要手动引入组件，能够让开发者就像全局组件那样进行开发，但实际上又是按需引入，且不限制打包工具，不需要使用 babel</p><p>安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">unplugin-vue-components</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># or</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">unplugin-vue-components</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>并且提供了内置的解析器用于流行的 UI 库，比如 Vuetify，Ant Design Vue 和 Element Plus，使用 ElementPlus 为例</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">//</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">vite.config.ts</span></span>
<span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">{</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">defineConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">}</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vite&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">AutoImport</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-auto-import/vite&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Components</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-vue-components/vite&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">{</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">ElementPlusResolver</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">}</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-vue-components/resolvers&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">//</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">plugins:</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Components(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#61AFEF;">resolvers:</span><span style="color:#ABB2BF;"> [ElementPlusResolver()</span><span style="color:#98C379;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>如果你是webpack 打包工具</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// The rest of the config here should be left untouched</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;unplugin-vue-components/webpack&#39;</span><span style="color:#ABB2BF;">)({ </span><span style="color:#7F848E;font-style:italic;">/* plugin config here */</span><span style="color:#ABB2BF;"> }) </span><span style="color:#7F848E;font-style:italic;">// This imports and registers the plugin in Webpack</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>正常况下，该插件会导入自动导入位于 <code>src/components</code> 路径下的组件，但你也可以通过 dirs 选项进行自定义。如果你使用 TypeScript，该插件能提供自动导入组件的类型支持。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Components</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-vue-components/vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineConfig</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Components</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">dirs</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;src/example/dir/here&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;other/example&quot;</span><span style="color:#ABB2BF;">]})</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>也可以自定义解析器，如果组件名称以 &quot;Example&quot; 开头，它会将组件的名称去掉前缀 &quot;Example&quot; 并指定组件的导入来源为 &quot;example-package&quot;。这样，在使用这个插件时，当你在代码中引用 &quot;ExampleButton&quot; 组件时，它会自动导入 &quot;example-package&quot; 中的 &quot;Button&quot; 组件。这可以帮助你更灵活地组织和导入组件，特别是在项目中使用了多个包或模块时</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">Components</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#E06C75;font-style:italic;">componentName</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">componentName</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Example&quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">componentName</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">from</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;example-package&quot;</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>如果为了获得正确的 TypeScript 支持</strong>，使用 Volar。Volar 是一个用于 Vue 的语言服务器，它允许你在 IDE/文本编辑器中使用更高级的 Vue 开发特性，比如类型检查、语法突显和自动补全。虽然 Vue 还不支持 TypeScript 的这种用法，但 Volar 已经在这种情况下增加了对类型检查和自动补全的支持，<strong>文件以包含 dts 属性，该属性设置为 true</strong>，如果安装了 TypeScript，还应该自动启用此选项。您需要做的另一件事是将生成的 <code>components.d.ts</code>（自动导入的组件类型声明文件，这样就可以在ts中使用组件的时候有提示了） 添加到 tsconfig.js <code>include</code> <code>&quot;include&quot;: [ &quot;components.d.ts&quot;]</code>列表中。Ts 是包含所有类型的文件，如果您不告诉 TypeScript 包含它，它将不会做任何事情</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  dts: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// put this in the unplugin-vue-components config</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>综合来看提供的所有api 介绍：</p><ul><li><code>dirs</code>: 搜索组件的相对路径目录。</li><li><code>extensions</code>: 组件的有效文件扩展名。</li><li><code>globs</code>: 用于匹配文件名以检测为组件的全局模式。</li><li><code>deep</code>: 是否搜索子目录。</li><li><code>resolvers</code>: 自定义组件解析器。</li><li><code>dts</code>: 生成全局声明的 <code>components.d.ts</code>，默认为 <code>true</code> 如果 TypeScript 已安装。</li><li><code>directoryAsNamespace</code>: 允许子目录作为组件的命名空间前缀。</li><li><code>collapseSamePrefixes</code>: 折叠相同的前缀（驼峰敏感）以防止命名空间组件名称中的重复。</li><li><code>globalNamespaces</code>: 忽略命名空间前缀的子目录路径。</li><li><code>directives</code>: 自动导入指令，Vue 3 默认为 <code>true</code>，Vue 2 默认为 <code>false</code>。</li><li><code>importPathTransform</code>: 在解析之前转换路径。</li><li><code>allowOverrides</code>: 允许具有相同名称的组件覆盖其他组件。</li><li><code>include</code>: 转换目标的过滤器。</li><li><code>exclude</code>: 排除的路径。</li><li><code>version</code>: 项目的 Vue 版本，如果未指定，将自动检测。</li><li><code>types</code>: 仅提供库中组件的类型（全局注册）。</li></ul><p>示例</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">Components</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">dirs</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;src/components&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">deep</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">dts</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">directoryAsNamespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">collapseSamePrefixes</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">globalNamespaces</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">directives</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">importPathTransform</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">v</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">v</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">allowOverrides</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">include</span><span style="color:#ABB2BF;">: [</span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">vue</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">vue</span><span style="color:#56B6C2;">\\?</span><span style="color:#E06C75;">vue/</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">exclude</span><span style="color:#ABB2BF;">: [</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">node_modules</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;3&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">types</span><span style="color:#ABB2BF;">: []</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>关于types数组用于注册全局组件的类型。数组中有一个对象，该对象指定了从 example-package 包中导入两个组件（ExampleComponentOne 和 ExampleComponentTwo）的类型这在你使用某些库（如路由库）提供的全局组件时特别有用。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  dts: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  types: [{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">from</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;example-package&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">names</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;ExampleComponentOne&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;ExampleComponentTwo&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  }],</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>自定义ui简单实现 resolvers</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">Components</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// ... 其他解析器</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 自定义xx-ui解析器</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// name为项目编译时加载到的自定义组件，String类型大驼峰格式的组件名</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 例如：name = XxButton</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 判断组件前缀</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Xx&#39;</span><span style="color:#ABB2BF;">)){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> { </span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// 包名，XxButton -&gt; Button</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">importName</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">), </span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#7F848E;font-style:italic;">// 路径直接写包名即可，因为我们已经安装了这个包</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;xx-ui&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="unplugin-auto-import" tabindex="-1">unplugin-auto-import <a class="header-anchor" href="#unplugin-auto-import" aria-label="Permalink to &quot;unplugin-auto-import&quot;">​</a></h3><p><code>unplugin-auto-import</code> 该插件主要用于自动导入 JavaScript 语法和库。它可以自动导入 Vue Composition API、JavaScript 语法、甚至是你自己定义的函数或对象。减少了手动引入的步骤</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">unplugin-auto-import</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">unplugin-auto-import</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>知道这两个库后以element-plus为例，组件可以分为两种，一种就是正常的组件这类组件使用 <code>unplugin-vue-components </code> 就能帮助自动导入，一种事反馈组件，这类组件需要使用 <code>unplugin-auto-import</code> 来帮助自动导入 整体最基本使用如下</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// vite.config.ts</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineConfig</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">AutoImport</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-auto-import/vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Components</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-vue-components/vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ElementPlusResolver</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;unplugin-vue-components/resolvers&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">AutoImport</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [</span><span style="color:#61AFEF;">ElementPlusResolver</span><span style="color:#ABB2BF;">()], </span><span style="color:#7F848E;font-style:italic;">// 解决 import { ElMessage } from &#39;element-plus&#39; 这类组件的导入</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Components</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [</span><span style="color:#61AFEF;">ElementPlusResolver</span><span style="color:#ABB2BF;">()],</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>使用的是ts 版本那么他会 生成文件 <code>auto-imports.d.ts</code> 和 是自动导入api声明文件，这样就可以在ts中使用组件的时候有提示了，需要将这两个文件 配置在 <code>tsconfig.json</code> 中的 <code>include</code> 中，这样就可以在ts中使用组件的时候有提示了<code> &quot;include&quot;: [ &quot;auto-imports.d.ts&quot;]</code></p><p>一些常用的其他属性配置</p><ul><li><p><code>include</code>:中指定的文件类型或文件路径才会被 unplugin-auto-import 插件处理，从而进行自动导入，例如 <code>.ts</code>, <code>.tsx</code>, <code>.js</code>, <code>.jsx</code>, <code>.vue</code>, <code>.md</code> 等。如果只有配置 <code> .vue</code> 文件会被 unplugin-auto-import 插件处理，其他类型的文件（如 .js, .ts, .jsx, .tsx 等）将不会进行自动导入</p></li><li><p><code>imports</code>: 定义全局导入的模块和别名。支持预设（如 <code>&#39;vue&#39;</code>, <code>&#39;vue-router&#39;</code>）和自定义设置。</p></li><li><p><code>defaultExportByFilename</code>: 是否根据文件名自动导入默认模块。</p></li><li><p><code>dirs</code>: 指定目录来自动导入模块。</p></li><li><p><code>dts</code>: 生成对应的 <code>.d.ts</code> 文件，用于 TypeScript 支持。</p></li><li><p><code>vueTemplate</code>: 是否在 Vue 模板内进行自动导入。</p></li><li><p><code>resolvers</code>: 自定义解析器，与 <code>unplugin-vue-components</code> 兼容。</p></li><li><p><code>injectAtEnd</code>: 是否在其他导入语句的末尾注入自动导入。</p></li><li><p><code>eslintrc</code>: 生成对应的 <code>.eslintrc-auto-import.json</code> 文件，用于 ESLint 配置。</p></li></ul><h4 id="示例配置" tabindex="-1">示例配置 <a class="header-anchor" href="#示例配置" aria-label="Permalink to &quot;示例配置&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">AutoImport</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">include</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\.</span><span style="color:#D19A66;">[tj]</span><span style="color:#E06C75;">sx</span><span style="color:#D19A66;">?</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// .ts, .tsx, .js, .jsx</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">vue</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">vue</span><span style="color:#56B6C2;">\\?</span><span style="color:#E06C75;">vue/</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// .vue</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">md</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// .md</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">imports</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;vue-router&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;@vueuse/core&#39;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;useMouse&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        [</span><span style="color:#98C379;">&#39;useFetch&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;useMyFetch&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;axios&#39;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        [</span><span style="color:#98C379;">&#39;default&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;axios&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">dts</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./auto-imports.d.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// dts: path.resolve(pathSrc, &#39;types&#39;, &#39;components.d.ts&#39;) // (false) 配置文件生成位置，默认是根目录 /components.d.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">vueTemplate</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">resolvers</span><span style="color:#ABB2BF;">: [</span><span style="color:#7F848E;font-style:italic;">/* ... */</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">injectAtEnd</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">eslintrc</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./.eslintrc-auto-import.json&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">globalsPropValue</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>为什么配置 <code>eslintrc</code> 字段，当使用 <code>unplugin-auto-import</code>这个自动导入功能时,有一个小问题：有些代码检查工具（比如ESLint）可能不知道这些自动导入的内容，<strong>它们可能会误认为你使用了一些 未定义 的变量或函数，从而给你报错</strong>。</p><p>为了解决这个问题，<code>unplugin-auto-import</code> 提供了一个 eslintrc 设置。这个设置可以帮助你自动生成一个特殊的配置文件，告诉 ESLint：“嘿，这些自动导入的内容是已经定义好的，不要给我报错哦！”</p><p>具体来说，这个 eslintrc 设置有几个选项</p><ul><li><p><code>enabled</code>: 这个选项决定是否要生成那个特殊的配置文件。默认是不生成的，但如果你想生成，就把它设置为 true。</p></li><li><p><code>filepath</code>: 这是那个特殊配置文件的保存位置。默认是在项目的根目录下，名为 .eslintrc-auto-import.json。</p></li><li><p><code>globalsPropValue</code>: 这个选项决定在配置文件中，如何描述那些自动导入的内容。大多数情况下，你不需要改这个设置。</p></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">eslintrc: {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">enabled</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 启用这个功能</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;./.eslintrc-auto-import.json&#39;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 配置文件路径</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">globalsPropValue</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;readonly&#39;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 设置全局变量为只读</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>eslintrc</code> 配置完后要在 eslint 配置文件的 extends 中进行声明</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">extends: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#FFFFFF;">&#39;plugin:vue/vue</span><span style="color:#D19A66;">3</span><span style="color:#FFFFFF;">-essential&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#FFFFFF;">&#39;eslint:recommended&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#FFFFFF;">&#39;@vue/eslint-config-typescript&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#FFFFFF;">&#39;@vue/eslint-config-prettier/skip-formatting&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#FFFFFF;">&#39;./.eslintrc-auto-import.json&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="有关-两者使用的注意事项" tabindex="-1">有关 两者使用的注意事项 <a class="header-anchor" href="#有关-两者使用的注意事项" aria-label="Permalink to &quot;有关 两者使用的注意事项&quot;">​</a></h3><p>提供了 unplugin-vue-components 中 resolvers 属性的ui 库 会存在 css icon 等图标库的配置</p><p><a href="https://blog.csdn.net/goodcto/article/details/130022782" target="_blank" rel="noreferrer">unplugin-auto-import 和 unplugin-vue-components 的正确使用方式</a></p><p><a href="https://blog.csdn.net/Liu_yunzhao/article/details/130181440" target="_blank" rel="noreferrer">unplugin-vue-components 源码原理分析</a></p><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p><a href="https://github.com/unplugin/unplugin-vue-components/blob/main/src/core/resolvers/element-plus.ts" target="_blank" rel="noreferrer">unplugin-vue-components-resolvers</a></p><p><a href="https://github.com/unplugin/unplugin-vue-components/issues/361" target="_blank" rel="noreferrer">使用按需引入时，首次启动服务会依赖预构建style</a></p><p><a href="https://github.com/hminghe/md-admin-element-plus/blob/main/vite.config.ts" target="_blank" rel="noreferrer">解决案例参考使用按需引入时，首次启动服务会依赖预构建style</a></p>`,76),o=[e];function r(c,t,B,i,y,u){return n(),a("div",null,o)}const A=s(p,[["render",r]]);export{b as __pageData,A as default};
